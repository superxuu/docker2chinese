<!DOCTYPE HTML><html><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

<title>docker-compose.yml文件编写详解--V3</title>
    
<style id="wiz_custom_css">html, .wiz-editor-body {font-size: 12pt;}.wiz-editor-body {font-family: Helvetica, 'Hiragino Sans GB', '寰蒋闆呴粦', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;line-height: 1.7;margin: 0 auto;padding: 20px 16px;padding: 1.25rem 1rem;}.wiz-editor-body h1,.wiz-editor-body h2,.wiz-editor-body h3,.wiz-editor-body h4,.wiz-editor-body h5,.wiz-editor-body h6 {margin:20px 0 10px;margin:1.25rem 0 0.625rem;padding: 0;font-weight: bold;}.wiz-editor-body h1 {font-size:20pt;font-size:1.67rem;}.wiz-editor-body h2 {font-size:18pt;font-size:1.5rem;}.wiz-editor-body h3 {font-size:15pt;font-size:1.25rem;}.wiz-editor-body h4 {font-size:14pt;font-size:1.17rem;}.wiz-editor-body h5 {font-size:12pt;font-size:1rem;}.wiz-editor-body h6 {font-size:12pt;font-size:1rem;color: #777777;margin: 1rem 0;}.wiz-editor-body div,.wiz-editor-body p,.wiz-editor-body ul,.wiz-editor-body ol,.wiz-editor-body dl,.wiz-editor-body li {margin:8px 0;}.wiz-editor-body blockquote,.wiz-editor-body table,.wiz-editor-body pre,.wiz-editor-body code {margin:8px 0;}.wiz-editor-body .CodeMirror pre {margin:0;}.wiz-editor-body ul,.wiz-editor-body ol {padding-left:32px;padding-left:2rem;}.wiz-editor-body ol.wiz-list-level1 > li {list-style-type:decimal;}.wiz-editor-body ol.wiz-list-level2 > li {list-style-type:lower-latin;}.wiz-editor-body ol.wiz-list-level3 > li {list-style-type:lower-roman;}.wiz-editor-body blockquote {padding: 0 12px;}.wiz-editor-body blockquote > :first-child {margin-top:0;}.wiz-editor-body blockquote > :last-child {margin-bottom:0;}.wiz-editor-body img {border:0;max-width:100%;height:auto !important;margin:2px 0;}.wiz-editor-body table {border-collapse:collapse;border:1px solid #bbbbbb;}.wiz-editor-body td,.wiz-editor-body th {padding:4px 8px;border-collapse:collapse;border:1px solid #bbbbbb;min-height:28px;word-break:break-word;box-sizing: border-box;}.wiz-hide {display:none !important;}</style><style id="wiz_code_style">.wiz-editor-body .wiz-code-container{position: relative; padding:8px 0; margin: 5px 25px 5px 5px;text-indent:0; text-align:left;}.CodeMirror {font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace; color: black; font-size: 10.5pt; font-size: 0.875rem}.wiz-editor-body .wiz-code-container .CodeMirror div {margin-top: 0; margin-bottom: 0;}.CodeMirror-lines {padding: 4px 0;}.CodeMirror pre {padding: 0 4px;}.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {background-color: white;}.CodeMirror-gutters {border-right: 1px solid #ddd; background-color: #f7f7f7; white-space: nowrap;}.CodeMirror-linenumbers {}.CodeMirror-linenumber {padding: 0 3px 0 5px; min-width: 20px; text-align: right; color: #999; white-space: nowrap;}.CodeMirror-guttermarker {color: black;}.CodeMirror-guttermarker-subtle {color: #999;}.CodeMirror-cursor {border-left: 1px solid black; border-right: none; width: 0;}.CodeMirror div.CodeMirror-secondarycursor {border-left: 1px solid silver;}.cm-fat-cursor .CodeMirror-cursor {width: auto; border: 0 !important; background: #7e7;}.cm-fat-cursor div.CodeMirror-cursors {z-index: 1;}.cm-animate-fat-cursor {width: auto; border: 0; -webkit-animation: blink 1.06s steps(1) infinite; -moz-animation: blink 1.06s steps(1) infinite; animation: blink 1.06s steps(1) infinite; background-color: #7e7;}@-moz-keyframes blink {  0% {}  50% { background-color: transparent; }  100% {}}@-webkit-keyframes blink {  0% {}  50% { background-color: transparent; }  100% {}}@keyframes blink {  0% {}  50% { background-color: transparent; }  100% {}}.CodeMirror-overwrite .CodeMirror-cursor {}.cm-tab { display: inline-block; text-decoration: inherit; }.CodeMirror-rulers {position: absolute; left: 0; right: 0; top: -50px; bottom: -20px; overflow: hidden;}.CodeMirror-ruler {border-left: 1px solid #ccc; top: 0; bottom: 0; position: absolute;}.cm-s-default .cm-header {color: blue;}.cm-s-default .cm-quote {color: #090;}.cm-negative {color: #d44;}.cm-positive {color: #292;}.cm-header, .cm-strong {font-weight: bold;}.cm-em {font-style: italic;}.cm-link {text-decoration: underline;}.cm-strikethrough {text-decoration: line-through;}.cm-s-default .cm-keyword {color: #708;}.cm-s-default .cm-atom {color: #219;}.cm-s-default .cm-number {color: #164;}.cm-s-default .cm-def {color: #00f;}.cm-s-default .cm-variable,.cm-s-default .cm-punctuation,.cm-s-default .cm-property,.cm-s-default .cm-operator {}.cm-s-default .cm-variable-2 {color: #05a;}.cm-s-default .cm-variable-3 {color: #085;}.cm-s-default .cm-comment {color: #a50;}.cm-s-default .cm-string {color: #a11;}.cm-s-default .cm-string-2 {color: #f50;}.cm-s-default .cm-meta {color: #555;}.cm-s-default .cm-qualifier {color: #555;}.cm-s-default .cm-builtin {color: #30a;}.cm-s-default .cm-bracket {color: #997;}.cm-s-default .cm-tag {color: #170;}.cm-s-default .cm-attribute {color: #00c;}.cm-s-default .cm-hr {color: #999;}.cm-s-default .cm-link {color: #00c;}.cm-s-default .cm-error {color: #f00;}.cm-invalidchar {color: #f00;}.CodeMirror-composing { border-bottom: 2px solid; }div.CodeMirror span.CodeMirror-matchingbracket {color: #0f0;}div.CodeMirror span.CodeMirror-nonmatchingbracket {color: #f22;}.CodeMirror-matchingtag { background: rgba(255, 150, 0, .3); }.CodeMirror-activeline-background {background: #e8f2ff;}.CodeMirror {position: relative; background: #f5f5f5;}.CodeMirror-scroll {overflow: hidden !important; margin-bottom: 0; margin-right: -30px; padding: 16px 30px 16px 0; outline: none; position: relative;}.CodeMirror-sizer {position: relative; border-right: 30px solid transparent;}.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {position: absolute; z-index: 6; display: none;}.CodeMirror-vscrollbar {right: 0; top: 0; overflow-x: hidden; overflow-y: scroll;}.CodeMirror-hscrollbar {bottom: 0; left: 0 !important; overflow-y: hidden; overflow-x: scroll;}.CodeMirror-scrollbar-filler {right: 0; bottom: 0;}.CodeMirror-gutter-filler {left: 0; bottom: 0;}.CodeMirror-gutters {position: absolute; left: 0; top: -5px; min-height: 100%; z-index: 3;}.CodeMirror-gutter {white-space: normal; height: inherit; display: inline-block; vertical-align: top; margin-bottom: -30px;}.CodeMirror-gutter-wrapper {position: absolute; z-index: 4; background: none !important; border: none !important;}.CodeMirror-gutter-background {position: absolute; top: 0; bottom: 0; z-index: 4;}.CodeMirror-gutter-elt {position: absolute; cursor: default; z-index: 4; text-align: center;}.CodeMirror-gutter-wrapper ::selection { background-color: transparent }.CodeMirror-gutter-wrapper ::-moz-selection { background-color: transparent }.CodeMirror-lines {cursor: text; min-height: 1px;}.CodeMirror pre {-moz-border-radius: 0; -webkit-border-radius: 0; border-radius: 0; border-width: 0; background: transparent; font-family: inherit; font-size: inherit; margin: 0; white-space: pre; word-wrap: normal; line-height: inherit; color: inherit; z-index: 2; position: relative; overflow: visible; -webkit-tap-highlight-color: transparent; -webkit-font-variant-ligatures: contextual; font-variant-ligatures: contextual;}.CodeMirror-wrap pre {word-wrap: break-word; white-space: pre-wrap; word-break: normal;}.CodeMirror-linebackground {position: absolute; left: 0; right: 0; top: 0; bottom: 0; z-index: 0;}.CodeMirror-linewidget {position: relative; z-index: 2; overflow: auto;}.CodeMirror-widget {}.CodeMirror-rtl pre { direction: rtl; }.CodeMirror-code {outline: none;}.CodeMirror-scroll,.CodeMirror-sizer,.CodeMirror-gutter,.CodeMirror-gutters,.CodeMirror-linenumber {-moz-box-sizing: content-box; box-sizing: content-box;}.CodeMirror-measure {position: absolute; width: 100%; height: 0; overflow: hidden; visibility: hidden;}.CodeMirror-cursor {position: absolute; pointer-events: none;}.CodeMirror-measure pre { position: static; }div.CodeMirror-cursors {visibility: hidden; position: relative; z-index: 3;}div.CodeMirror-dragcursors {visibility: visible;}.CodeMirror-focused div.CodeMirror-cursors {visibility: visible;}.CodeMirror-selected { background: #d9d9d9; }.CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }.CodeMirror-crosshair { cursor: crosshair; }.CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection { background: #d7d4f0; }.CodeMirror-line::-moz-selection, .CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection { background: #d7d4f0; }.cm-searching {background: #ffa; background: rgba(255, 255, 0, .4);}.cm-force-border { padding-right: .1px; }@media print {  .CodeMirror div.CodeMirror-cursors {visibility: hidden;}}.cm-tab-wrap-hack:after { content: ""; }span.CodeMirror-selectedtext { background: none; }.CodeMirror-activeline-background, .CodeMirror-selected {transition: visibility 0ms 100ms;}.CodeMirror-blur .CodeMirror-activeline-background, .CodeMirror-blur .CodeMirror-selected {visibility:hidden;}.CodeMirror-blur .CodeMirror-matchingbracket {color:inherit !important;outline:none !important;text-decoration:none !important;}.CodeMirror-sizer {min-height:auto !important;}</style></head>

<body class="wiz-editor-body"  spellcheck="false" style="opacity: 1;"><div>示例：</div><div><ul style="color: rgb(203, 219, 230); font-size: 0.875rem; background-color: rgb(6, 31, 47);"><li><p style="color: rgb(211, 212, 212) !important;"><a href="https://docs.docker.com/get-started/part3/#your-first-docker-composeyml-file" style="color:rgb(156, 215, 247);text-decoration:none;">Your first docker-compose.yml File</a></p></li><li><p style="color: rgb(211, 212, 212) !important;"><a href="https://docs.docker.com/get-started/part5/#add-a-new-service-and-redeploy" style="color:rgb(156, 215, 247);text-decoration:none;">Add a new service and redeploy</a></p></li></ul><div><font color="#d3d4d4" face="Open Sans, sans-serif"><span style="font-size: 0.875rem; line-height: 23.8px;"><br></span></font></div><h3><font color="#d3d4d4" face="Open Sans, sans-serif"><span style="line-height: 23.8px;"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);">build</span></span></font></h3></div><div><font color="#d3d4d4" face="Open Sans, sans-serif"><span style="font-size: 0.875rem; line-height: 23.8px;"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);"><span style="color: rgb(46, 48, 51);">在构建时应用的配置选项。</span></span></span><span style="font-size: 0.875rem; line-height: 23.8px;"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);"><br></span></span></font></div><div><font color="#d3d4d4" face="Open Sans, sans-serif"><span style="font-size: 0.875rem; line-height: 23.8px;"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);"><span style="color: rgb(46, 48, 51);"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">build</code><font style="color: rgb(51, 68, 76);"><font><span>&nbsp;</span>可以指定为包含构建上下文路径的字符串：</font></font><br></span></span></span></font></div><div  data-mode="Java" data-theme="default" id="wiz_cm_1553054705884_2259" class="wiz-code-container"><textarea style="display: none;">version: '3'
services:
  webapp:
    build: ./dir</textarea><wiz_code_mirror><div class="CodeMirror cm-s-default CodeMirror-wrap" data-id="wiz_cm_1553054705884_2259"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 19.9851px; left: 33.7946px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;" tabindex="0"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 99px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>4</div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>4</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 3.80952px; top: 0px; height: 22.8574px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation"><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">version</span>: <span class="cm-string">'3'</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">services</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">webapp</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">build</span>: .<span class="cm-operator">/</span><span class="cm-variable">dir</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 99px;"></div><div class="CodeMirror-gutters" style="height: 129px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><div>也可以是，在上下文和可选的的<a href="https://docs.docker.com/compose/compose-file/#dockerfile" style="color: rgb(0, 144, 200); text-decoration: none; font-size: 0.875rem;">Dockerfile</a><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>&nbsp;</span>and<span>&nbsp;</span></span><a href="https://docs.docker.com/compose/compose-file/#args" style="color: rgb(0, 144, 200); text-decoration: none; font-size: 0.875rem;">args</a>中被指定的包含路径的对象<span style="color: rgb(51, 68, 76); font-size: 0.875rem;">:</span></div><div  data-mode="Java" data-theme="default" id="wiz_cm_1553054835535_3182" class="wiz-code-container"><textarea style="display: none;">version: '3'
services:
  webapp:
    build:
      context: ./dir
      dockerfile: Dockerfile-alternate
      args:
        buildno: 1</textarea><wiz_code_mirror><div class="CodeMirror cm-s-default CodeMirror-wrap" data-id="wiz_cm_1553054835535_3182"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 19.9851px; left: 33.7946px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;" tabindex="0"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 190px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>8</div></div><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>8</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class=" wiz-hide wiz_CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 3.80952px; top: 0px; height: 22.8574px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation"><div style="position: relative;" class="CodeMirror-activeline"><div class=" wiz-hide wiz_CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">version</span>: <span class="cm-string">'3'</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">services</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">webapp</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">build</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span class="cm-variable">context</span>: .<span class="cm-operator">/</span><span class="cm-variable">dir</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span class="cm-variable">dockerfile</span>: <span class="cm-variable">Dockerfile</span><span class="cm-operator">-</span><span class="cm-variable">alternate</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span class="cm-variable">args</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable">buildno</span>: <span class="cm-number">1</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 190px;"></div><div class="CodeMirror-gutters" style="height: 220px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></wiz_code_mirror></div><p><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>如果您同时指定</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">image</code><code class="highlighter-rouge" style="font-size: 0.875rem; line-height: 23.8px;"><font color="#33444c" face="Open Sans, sans-serif">和</font></code><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">build</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>，则使用以下</font><font>指定</font><font>的</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">webapp</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>和可选项<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">tag</span></font><font>对构建的镜像进行命名</font><font>：</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">build</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">./dir</span>
<span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">webapp:tag</span></code></pre></div><div>这将从<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);">./dir目录创建一个名字为<code class="highlighter-rouge" style="background-color: rgba(12, 81, 118, 0.0980392);">webapp</code></span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><span>&nbsp;，标签为</span></span></span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);">tag的镜像</span></span></span></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：</font><font><span>&nbsp;</span>使用（版本3）Compose文件</font></font><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color: rgb(0, 144, 200); text-decoration: none;"><font><font>在群集模式下部署堆栈</font></font></a><font><font>时，</font><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;"><font>将</font></a><font>忽略此选项<span>&nbsp;</span></font><font>。</font><font>该</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker stack</code><font><font>命令仅接受预先构建好的镜像。</font></font><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font><br></font></font></span></div><div></div><h3>CONTEXT</h3><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>包含Dockerfile的目录的路径，或者是git存储库的url。</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><font>当提供的值是相对路径时，它被解释为相对于Compose文件的位置。</font><font>此目录也是发送给Docker守护程序的构建上下文。</font><br></span></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;">compose使用生成的名字构建并标记镜像，然后使用该镜像。</span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code>build:
  context: ./dir</code></pre><br></span></div><div></div><h3>DOCKERFILE</h3><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>备用Dockerfile。</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><font>Compose使用备用文件来构建。</font><font>还必须指定构建路径。</font><br></span></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><font><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">build</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">context</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">.</span>
  <span class="na" style="color:rgb(101, 139, 0);">dockerfile</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">Dockerfile-alternate</span></code></pre></font></span></span></div><h3><font><font>ARGS</font></font></h3><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>添加构建参数，这些参数只能在构建过程中访问。</font></font></p><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>首先，在Dockerfile中指定参数：</font></font></p><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code>ARG buildno
ARG gitcommithash

RUN echo "Build number: $buildno"
RUN echo "Based on commit: $gitcommithash"</code></pre><font><font>然后在</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">build</code><font><font>键</font><font>下指定参数</font><font>。</font><font>您可以传递字典或列表：</font></font><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code>build:
  context: .
  args:
    buildno: 1
    gitcommithash: cdc3b19

build:
  context: .
  args:
    - buildno=1
    - gitcommithash=cdc3b19</code></pre><strong><font><font>注意</font></font></strong><font><font>：在Dockerfile中，如果</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">ARG</code><font><font>在</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">FROM</code><font><font>指令</font><font>之前</font><font>指定</font><font>，<span>&nbsp;则ARG在FROM下的build指令中不可用，<font><font>如果您需要在两个位置都可以使用ARG，请在</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">FROM</code><font><font>指令</font><font>下指定它</font><font>。<span>See<span>&nbsp;</span></span><a href="https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact" style="color: rgb(0, 144, 200); text-decoration: none;">Understand how ARGS and FROM interact</a><span><span>&nbsp;</span>for usage details.</span></font></font></span></font></font><br></span></div><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>您可以在指定构建参数时省略该值，在这种情况下，它在构建时的值是运行Compose的环境中的值。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">args</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">buildno</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">gitcommithash</span></code></pre></div><div><span style="color:rgb(51, 68, 76);font-size:0.875rem"><strong><font><font>注</font></font></strong><font><font>：YAML布尔值（</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">true</code><font><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">false</code><font><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">yes</code><font><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">no</code><font><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">on</code><font><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">off</code><font><font>）必须用引号括起来，这样分析器会将它们解释为字符串。</font></font><br></span></div><div><span style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font><br></font></font></span></div><div></div><h3 id="image" style="color: rgb(51, 68, 76);"><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem; color: rgb(255, 0, 0);">image</span></h3><div>指定容器启动的镜像，可以是<span style="color: rgb(51, 68, 76); font-size: 0.875rem;">repository/tag<span>&nbsp;或者十部分镜像ID。</span></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code>image: redis
image: ubuntu:14.04
image: tutum/influxdb
image: example-registry.com:4000/postgresql
image: a4bc65fd</code></pre><font><font>如果图像不存在，则Compose尝试拉取它，除非您还指定了build</font></font><font><font>，在这种情况下，它使用指定的选项构建它并使用指定的标记对其进行标记。</font></font><br></span></span></div><div></div><h3><font><font><span><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0); font-size: 1.5rem;">depends_on</span></span></font></font></h3><div>表述服务之间的依赖关系，服务之间的依赖导致以下行为：</div><div><ul><li><p><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker-compose up</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>以依赖顺序启动服务。</font><font>在以下示例中，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">db</code><code class="highlighter-rouge" style="font-size: 0.875rem; line-height: 23.8px;"><font color="#33444c" face="Open Sans, sans-serif">和</font></code><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">redis</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>在<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">web</span>之前启动</font></font><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>。</font></font></p></li><li style="color: rgb(51, 68, 76); font-size: 0.875rem;"><p><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker-compose up SERVICE</code><font><font>自动包含</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">SERVICE的</code><font><font>依赖服务。</font><font>在以下示例中，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker-compose up web同时也</code><font><font>创建并启动了</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">db</code><font><font>和</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">redis</code><font><font>。</font></font></p></li><li style="color: rgb(51, 68, 76); font-size: 0.875rem;"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker-compose stop</code><font><font>按依赖顺序停止服务。</font><font>在以下示例中，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">web</code><font><font>在</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">db</code><font><font>和<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">redis</span></font><font>之前停止</font></font><font><font>。</font></font></li></ul></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>简单的例子：</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">3'</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">web</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">build</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">.</span>
    <span class="na" style="color:rgb(101, 139, 0);">depends_on</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">db</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">redis</span>
  <span class="na" style="color:rgb(101, 139, 0);">redis</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">redis</span>
  <span class="na" style="color:rgb(101, 139, 0);">db</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">postgres</span></code></pre></div><div class="language-yaml highlighter-rouge" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font style="color: rgb(20, 136, 198);"><font>使用<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">depends_on</span>时需要注意以下几点</font></font><font style="color: rgb(20, 136, 198);"><font>：</font></font><br></div><div style="color:gray;font-size:0.875rem"><ul><li><span style="color: rgb(12, 81, 118); font-size: 0.788rem; line-height: 1.7; background-color: rgb(245, 248, 250);">depends_on并不意味着启动web前只是等待db和redis “ready”,而是要他们已经“start”。</span><font style="color: rgb(51, 68, 76);">如果您需要等待服务准备就绪，请参阅</font><a href="https://docs.docker.com/compose/startup-order/" style="color: rgb(0, 144, 200); text-decoration: none;">控制启动顺序以</a><font style="color: rgb(51, 68, 76);">&nbsp;获取有关此问题的更多信息以及解决此问题的策略。</font><br></li><li><font style="color: rgb(51, 68, 76);">版本3不再支持</font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">condition</code><font style="color: rgb(51, 68, 76);">形式</font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">depends_on</code><font style="color: rgb(51, 68, 76);">。</font><br></li><li><font style="color: rgb(51, 68, 76);">使用版本3 Compose文件<a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(35, 82, 124);text-decoration:none;">在swarm模式下部署堆栈</a></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">depends_on</code><font style="color: rgb(51, 68, 76);">时，</font><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color: rgb(0, 144, 200); text-decoration: none;">将</a><font style="color: rgb(51, 68, 76);">忽略该选项&nbsp;。</font><br></li></ul></div><div></div><h3 id="deploy" style="color: rgb(51, 68, 76);"><span style="color: rgb(255, 0, 0); font-size: 1.5rem; line-height: 1.7;">expose</span><br></h3><p style="color:rgb(51, 68, 76);font-size:0.875rem;line-height:1.7"><font><font>暴露端口而不将它们发布到主机 - 它们只能被链接服务访问。</font><font>只能指定内部端口。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem;line-height:1.7"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">expose</span><span class="pi">:</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3000"</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">8000"</span></code></pre></div><div></div><h3 id="links" style="color: rgb(51, 68, 76); font-size: 1.375rem;"><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);">links</span></h3><div><span style="color: rgb(255, 0, 0); font-size: 1.5rem; line-height: 1.7;"><strong style="color: rgb(206, 72, 68); font-size: 0.875rem;"><font><font>警告</font></font></strong><font style="color: rgb(206, 72, 68); font-size: 0.875rem;"><font>：该</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">--link</code><font style="color: rgb(206, 72, 68); font-size: 0.875rem;"><font>标志是Docker的遗留功能。</font><font>它最终可能被删除。<font><font>除非您绝对需要继续使用它，否则我们建议您使用<a href="https://docs.docker.com/engine/userguide/networking//#user-defined-networks" style="color: rgb(35, 82, 124); text-decoration: none;">user-defined networks</a></font></font><font><font>来促进两个容器之间的通信，而不是使用</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">--link</code><font><font>。<a href="https://docs.docker.com/engine/userguide/networking//#user-defined-networks" style="color: rgb(35, 82, 124); text-decoration: none;">user-defined networks</a></font><font>不支持但是<span>&nbsp;</span></font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">--link支持的一个功能</code><font><font>是在容器之间共享环境变量。</font><font>但是，您可以使用其他机制（如卷）以更可控的方式在容器之间共享环境变量。</font></font></font></font><br></span></div><p style="color:rgb(51, 68, 76);font-size:0.875rem;line-height:1.7"><font><font>链接到另一个服务中的容器。</font><font>指定服务名称和链接别名（</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">SERVICE:ALIAS</code><font><font>），或仅指定服务名称。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem;line-height:1.7"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">web</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">links</span><span class="pi">:</span>
   <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">db</span>
   <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">db:database</span>
   <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">redis</span></code></pre></div><div><span style="color: rgb(255, 0, 0); font-size: 1.5rem; line-height: 1.7;"><font style="color: rgb(206, 72, 68); font-size: 0.875rem;"><font><span style="color: rgb(51, 68, 76);">被链接的容器可以通过与别名相同的主机名访问，如果未指定别名，则可以访问服务名称。</span><br></font></font></span></div><div><span style="color: rgb(255, 0, 0); font-size: 1.5rem; line-height: 1.7;"><font style="color: rgb(206, 72, 68); font-size: 0.875rem;"><font><font style="color: rgb(51, 68, 76);"><font>启用服务进行通信不需要链接 - 默认情况下，任何服务都可以通过该服务的名称访问任何其他服务。</font><font>（另请参阅<span><span>&nbsp;</span></span><a href="https://docs.docker.com/compose/networking/#links" style="color: rgb(0, 144, 200); text-decoration: none;">Links topic in Networking in Compose</a></font></font><font style="color: rgb(51, 68, 76);"><font>。）</font></font><br></font></font></span></div><div><span style="color: rgb(255, 0, 0); font-size: 1.5rem; line-height: 1.7;"><font style="color: rgb(206, 72, 68); font-size: 0.875rem;"><font><font style="color: rgb(51, 68, 76);"><font><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);">链接还以与</span></font></font><a href="https://docs.docker.com/compose/compose-file/#depends_on" style="color: rgb(0, 144, 200); text-decoration: none;"><font><font><span data-wiz-span="data-wiz-span" style="color: rgb(51, 102, 255);">depends_on</span></font></font></a><font style="color: rgb(51, 68, 76);"><font><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);">相同的方式表示服务之间的依赖关系</span><span><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);">&nbsp;</span></span></font><font><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);">，因此它们确定服务启动的顺序。</span></font></font><br></font></font></span></div><p style="color:rgb(20, 136, 198);font-size:0.875rem;line-height:1.7"><b>注意</b></p><div><span style="color: rgb(255, 0, 0); font-size: 1.5rem; line-height: 1.7;"><font style="color: rgb(206, 72, 68); font-size: 0.875rem;"><font><ul style="color: rgb(51, 68, 76); font-size: 1.094rem;"><li style="font-size:0.875rem;"><p><font><font>如果同时定义链接和</font></font><a href="https://docs.docker.com/compose/compose-file/#networks" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>网络</font></font></a><font><font>，则它们之间具有链接的服务必须共享至少一个共同的网络才能进行通信。</font></font></p></li><li style="font-size:0.875rem;"><span>This option is ignored when<span>&nbsp;</span></span><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color: rgb(0, 144, 200); text-decoration: none;">deploying a stack in swarm mode</a><span><span>&nbsp;</span>with a (version 3) Compose file.</span></li></ul></font></font></span></div><h3 id="logging" style="color: rgb(51, 68, 76); font-size: 1.375rem;"><span><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);"><span>ports</span><br></span></span></h3><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>暴露端口。</font></font></p><div><span><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);"><span><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：端口映射与<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">network_mode: host</span>不兼容</font></font></p></blockquote></span></span></span></div><h4 id="short-syntax-1" style="color: rgb(51, 68, 76);"><span data-wiz-span="data-wiz-span" style="font-size: 1rem;">SHORT SYNTAX</span></h4><div><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>指定ports（</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">HOST:CONTAINER</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>）或仅指定容器端口（选择临时的主机端口）</font></font><br></div><div><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：以</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">HOST:CONTAINER</code><font><font>格式</font><font>映射端口</font><font>时，使用低于60的容器端口时可能会遇到错误的结果，因为YAML会将格式</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">xx:yy</code><font><font>中的</font><font>数字解析</font><font>为base-60值。</font><font>因此，我们建议始终将端口映射明确指定为字符串。</font></font></p></blockquote></div><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">ports</span><span class="pi">:</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3000"</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3000-3005"</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">8000:8000"</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">9090-9091:8080-8081"</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">49100:22"</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">127.0.0.1:8001:8001"</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">127.0.0.1:5000-5010:5000-5010"</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">6060:6060/udp"</span></code></pre></div><div class="language-yaml highlighter-rouge" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><h4 id="long-syntax-1" style="font-size: 1rem;">LONG SYNTAX</h4></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>长格式语法允许配置无法以简短形式表示的其他字段。</font></font></p><div><ul style="color: rgb(51, 68, 76); font-size: 0.875rem;"><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">target</code><font><font>：容器内的端口</font></font></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">published</code><font><font>：公开暴露的港口</font></font></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">protocol</code><font><font>：端口协议（</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">tcp</code><font><font>或</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">udp</code><font><font>）</font></font></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">mode</code><font><font>：</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">host-</code><font><font>用于在每个节点上发布主机端口，或者</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">ingress-</code><font><font>用于群集模式端口实现<span>负载平衡</span>。</font></font></li></ul><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">ports</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na" style="color:rgb(101, 139, 0);">target</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">80</span>
    <span class="na" style="color:rgb(101, 139, 0);">published</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">8080</span>
    <span class="na" style="color:rgb(101, 139, 0);">protocol</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">tcp</span>
    <span class="na" style="color:rgb(101, 139, 0);">mode</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">host</span>
</code></pre></div><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：长语法是v3.2中的新增功能</font></font></p></blockquote><h3 id="restart" style="color: rgb(51, 68, 76); font-size: 1.375rem;"><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);"><span>command</span></span></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>覆盖默认命令。</font></font></p><div class="highlight" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size:0.813rem;color:rgb(51, 51, 51);background-color:rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">command</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">bundle exec thin -p 3000</span>
</code></pre></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>该命令也可以是一个列表，方式类似于<span>&nbsp;</span></font></font><a href="https://docs.docker.com/engine/reference/builder/#cmd" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>dockerfile</font></font></a><font><font>：</font></font></p><div class="highlight" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size:0.813rem;color:rgb(51, 51, 51);background-color:rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">command</span><span class="pi">:</span> <span class="pi">[</span><span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">bundle"</span><span class="pi">,</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">exec"</span><span class="pi">,</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">thin"</span><span class="pi">,</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">-p"</span><span class="pi">,</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3000"</span><span class="pi">]</span></code></pre></div><h3 id="restart" style="color: rgb(51, 68, 76); font-size: 1.375rem;"><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);"><span>entrypoint</span></span></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>覆盖默认入口点。</font></font></p><div class="highlight" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size:0.813rem;color:rgb(51, 51, 51);background-color:rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">entrypoint</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">/code/entrypoint.sh</span>
</code></pre></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>入口点也可以是一个列表，方式类似于<span>&nbsp;</span></font></font><a href="https://docs.docker.com/engine/reference/builder/#entrypoint" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>dockerfile</font></font></a><font><font>：</font></font></p><div class="highlight" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size:0.813rem;color:rgb(51, 51, 51);background-color:rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">entrypoint</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">php</span>
    <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">-d</span>
    <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20100525/xdebug.so</span>
    <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">-d</span>
    <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">memory_limit=-1</span>
    <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">vendor/bin/phpunit</span>
</code></pre></div><div><blockquote style="font-size:1.094rem;color:rgb(51, 68, 76);"><p style="font-size:0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：设置</font></font><code class="highlighter-rouge" style="font-size:0.788rem;color:rgb(12, 81, 118) !important;background-color:rgba(12, 81, 118, 0.0980392);">entrypoint</code><font><font>都会覆盖默认的 由包含<code class="highlighter-rouge" style="font-size:0.788rem;color:rgb(12, 81, 118) !important;background-color:rgba(12, 81, 118, 0.0980392);">ENTRYPOINT</code><span><span>&nbsp;指令的</span></span><span>Dockerfile<span>&nbsp;生成的镜像的</span></span><span class="Apple-converted-space">&nbsp;</span>&nbsp;<span style="color:rgb(12, 81, 118);font-family:monospace;font-size:0.788rem;background-color:rgba(12, 81, 118, 0.0980392);">entrypoint设置</span></font></font><font><font>，</font></font><em><font><font>并</font></font></em><font><font><span>&nbsp;</span>清除镜像上的任何默认命令 - 这意味着如果</font></font><font><font>Dockerfile中</font><font>有<code class="highlighter-rouge" style="font-size:0.788rem;color:rgb(12, 81, 118) !important;background-color:rgba(12, 81, 118, 0.0980392);">CMD</code><font><font><span>&nbsp;</span></font></font></font><font>指令，则会被忽略。</font></font></p><p style="font-size:0.875rem;"><font><font>也会忽略command命令。</font></font></p></blockquote></div><h3 id="restart" style="color: rgb(51, 68, 76); font-size: 1.375rem;"><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);">restart</span></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">no</code><font><font>是默认的重新启动策略，它不会在任何情况下重新启动容器。</font><font>当</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">always</code><font><font>指定时，容器总是重新启动。</font><font><span>&nbsp;</span></font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">on-failure是在</code><font><font>容器的退出码表明了一个故障错误时，重启容器。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code>restart: "no"
restart: always
restart: on-failure
restart: unless-stopped
</code></pre></div><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：</font><font><span>&nbsp;</span>使用（版本3）Compose文件</font></font><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>在群集模式下部署堆栈</font></font></a><font><font>时，</font><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;"><font>将</font></a><font>忽略此选项<span>&nbsp;</span></font><font>。</font><font>请改用</font></font><a href="https://docs.docker.com/compose/compose-file/#restart_policy" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>restart_policy</font></font></a><font><font>。</font></font></p></blockquote><div><h3 id="name" style="font-size:1.375rem;color:rgb(51, 68, 76);"><span data-wiz-span="data-wiz-span" style="color:rgb(255, 0, 0);">name</span></h3><blockquote style="font-size:1.094rem;color:rgb(51, 68, 76);"><p style="font-size:0.875rem;"><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-34" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>在3.4版文件格式中添加</font></font></a></p></blockquote></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>为此卷设置自定义名称。</font><font>name字段的使用参照<span>volumes<span>&nbsp;，</span></span>包含特殊的字符。<span style="color:rgb(46, 48, 51);">该名称按原样使用，不受堆栈名称的限制。</span></font></font></p><div class="highlight" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size:0.813rem;color:rgb(51, 51, 51);background-color:rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">3.4'</span>
<span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">data</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">name</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">my-app-data</span>
</code></pre></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>它也可以与</font></font><code class="highlighter-rouge" style="font-size:0.788rem;color:rgb(12, 81, 118) !important;background-color:rgba(12, 81, 118, 0.0980392);">external</code><font><font>一起使用</font><font>：</font></font></p><div class="highlight" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size:0.813rem;color:rgb(51, 51, 51);background-color:rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">3.4'</span>
<span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">data</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">external</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
    <span class="na" style="color:rgb(101, 139, 0);">name</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">my-app-data</span></code></pre></div><br class="Apple-interchange-newline"><h3 id="volumes" style="color: rgb(51, 68, 76); font-size: 1.375rem;"><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);">volumes</span></h3><span style="color: rgb(51, 68, 76); font-size: 0.875rem;">挂载主机路径或命名卷，指定为服务的子选项。</span><br></div><div><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>您可以将主机路径作为单个服务的定义的一部分进行安装，而无需在顶级</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">volumes</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>键中</font><font>定义它</font><font>。</font></font><br></div><div><b><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 255);">但是，如果要跨多个服务重用卷，请在</span></font></font><a href="https://docs.docker.com/compose/compose-file/#volume-configuration-reference" style="color: rgb(0, 144, 200); text-decoration: none; font-size: 0.875rem;"><font><font><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 255);">顶级</span></font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);"><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 255);">volumes</span></code><font><font><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 255);">键中</span></font></font></a></b><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 255);"><b>定义命名卷</b></span></font><font>。<span>Use named volumes with<span>&nbsp;</span></span><a href="https://docs.docker.com/compose/compose-file/#volumes-for-services-swarms-and-stack-files" style="color: rgb(0, 144, 200); text-decoration: none;">services, swarms, and stack files</a><span>.</span></font></font><br></div><div><strong style="color: rgb(51, 68, 76); font-size: 0.875rem;">Note</strong><span style="color: rgb(51, 68, 76); font-size: 0.875rem;">:&nbsp;</span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>top-level<span>&nbsp;</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><a href="https://docs.docker.com/compose/compose-file/#volume-configuration-reference" style="color: rgb(0, 144, 200); text-decoration: none;">volumes</a></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span>&nbsp;的key定义了一个</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span>named volume，并且</span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span><span style="font-size: 0.833rem; color: rgb(255, 255, 255);"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);">从每个服务的</span></span></span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span style="color:rgb(12, 81, 118);font-size:0.788rem;background-color:rgba(12, 81, 118, 0.0980392)">volumes</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span><span style="font-size: 0.833rem; color: rgb(255, 255, 255);"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);">列表中引用它；在早期的</span></span></span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>Compose<span class="Apple-converted-space">&nbsp;文件格式中，这将替换<code class="highlighter-rouge" style="font-size:0.788rem;color:rgb(12, 81, 118) !important;background-color:rgba(12, 81, 118, 0.0980392);">volumes_from</code></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>&nbsp;。<font><font>有关</font></font><a href="https://docs.docker.com/engine/admin/volumes/volumes/" style="color: rgb(0, 144, 200); text-decoration: none;"><font><font>卷</font></font></a><font><font>的一般信息，</font><font>请参阅<a href="https://docs.docker.com/engine/admin/volumes/volumes/" style="color: rgb(0, 144, 200); text-decoration: none;">Use volumes</a></font><font>和<a href="https://docs.docker.com/engine/extend/plugins_volume/" style="color: rgb(0, 144, 200); text-decoration: none;">Volume Plugins</a></font></font><font><font>。</font></font></span></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;">这个示例展示了一个</span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>named volume (</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">mydata</code></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>)<span>&nbsp;正在被<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">web</code></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span><span>&nbsp;服务使用，和</span></span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span><span><span style="color: rgb(46, 48, 51);">为单个服务定义的绑定挂载</span></span></span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>(first path under<span>&nbsp;</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span><span><span style="color: rgb(46, 48, 51);"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">db</code></span></span></span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span>&nbsp;</span>service<span>&nbsp;</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span><span><span style="color: rgb(46, 48, 51);"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">volumes</code></span></span></span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>)。<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">db</code></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>&nbsp;服务也使用了一个名叫<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">dbdata<span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><span>&nbsp;</span>(second path under<span>&nbsp;</span></span><code class="highlighter-rouge">db</code><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><span>&nbsp;</span>service<span>&nbsp;</span></span><code class="highlighter-rouge">volumes</code><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);">)</span></code></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>&nbsp;的</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>volume,</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span style="color: rgb(51, 51, 51);">但使用旧的字符串格式定义它以安装命名卷.</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span style="color: rgb(51, 51, 51);"><span style="color: rgb(51, 68, 76);"><span>&nbsp;</span>Named volumes 必须在 top-level<span>&nbsp;</span></span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span style="color: rgb(51, 51, 51);"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">volumes下列出</code></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span style="color: rgb(51, 51, 51);"><span style="color: rgb(51, 68, 76);">, as shown.</span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></span><div style="color:gray;font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3.2"</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">web</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">nginx:alpine</span>
    <span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na" style="color:rgb(101, 139, 0);">type</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">volume</span>
        <span class="na" style="color:rgb(101, 139, 0);">source</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">mydata</span>
        <span class="na" style="color:rgb(101, 139, 0);">target</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">/data</span>
        <span class="na" style="color:rgb(101, 139, 0);">volume</span><span class="pi">:</span>
          <span class="na" style="color:rgb(101, 139, 0);">nocopy</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
      <span class="pi">-</span> <span class="na" style="color:rgb(101, 139, 0);">type</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">bind</span>
        <span class="na" style="color:rgb(101, 139, 0);">source</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">./static</span>
        <span class="na" style="color:rgb(101, 139, 0);">target</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">/opt/app/static</span>

  <span class="na" style="color:rgb(101, 139, 0);">db</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">postgres:latest</span>
    <span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">/var/run/postgres/postgres.sock:/var/run/postgres/postgres.sock"</span>
      <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">dbdata:/var/lib/postgresql/data"</span>

<span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">mydata</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">dbdata</span><span class="pi">:</span></code></pre></div><div><b>SHORT SYNTAX</b></div><div><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>（可选）指定主机（</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">HOST:CONTAINER</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>）</font><font>上的路径</font><font>或访问模式（</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">HOST:CONTAINER:ro</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>）。</font></font><br></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>您可以在主机上挂载相对路径，该路径相对于正在使用的Compose配置文件的目录。</font><font>相对路径应始终以</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">.</code><font><font>或</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">..<span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);">开头</span></code><font><font>。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
  <span class="c1" style="color:rgb(34, 139, 34);"># Just specify a path and let the Engine create a volume</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">/var/lib/mysql</span>

  <span class="c1" style="color:rgb(34, 139, 34);"># Specify an absolute path mapping</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">/opt/data:/var/lib/mysql</span>

  <span class="c1" style="color:rgb(34, 139, 34);"># Path on the host, relative to the Compose file</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">./cache:/tmp/cache</span>

  <span class="c1" style="color:rgb(34, 139, 34);"># User-relative path</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">~/configs:/etc/configs/:ro</span>

  <span class="c1" style="color:rgb(34, 139, 34);"># Named volume</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">datavolume:/var/lib/mysql</span></code></pre></div><div><b>LONG SYNTAX</b></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>长格式语法允许配置无法以简短形式表示的其他字段。</font></font></p><div><ul style="color: rgb(51, 68, 76); font-size: 0.875rem;"><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">type</code><font><font>：安装类型</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">volume</code><font><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">bind</code><font><font>或</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">tmpfs</code></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">source</code><font><font>：mount的源，主机上用于绑定挂载的路径，或</font></font><a href="https://docs.docker.com/compose/compose-file/#volume-configuration-reference" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>顶级</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">volumes</code><font><font>键中</font></font></a><font><font>定义的卷的名称<span>&nbsp;</span></font><font>。</font><font>不适用于tmpfs挂载。</font></font></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">target</code><font><font>：容器中安装卷的路径</font></font></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">read_only</code><font><font>：将卷设置为只读的标识</font></font></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">bind</code><font><font>：配置其他绑定选项</font></font><ul><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">propagation</code><font><font>：用于绑定的传播模式</font></font></li></ul></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">volume</code><font><font>：配置其他卷选项</font></font><ul><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">nocopy</code><font><font>：用于在创建卷时禁用从容器复制数据的标识</font></font></li></ul></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">tmpfs</code><font><font>：配置其他tmpfs选项</font></font><ul><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">size</code><font><font>：tmpfs mount的大小（以<span>bytes</span>字节为单位）</font></font></li></ul></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">consistency</code><font><font>：mount的一致性要求，包含</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">consistent</code><font><font>（主机和容器具有相同的视图），</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">cached</code><font><font>（读缓存，主机视图是权威的）或</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">delegated</code><font><font>（读写缓存，容器的视图是权威的）</font></font></li></ul><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3.2"</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">web</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">nginx:alpine</span>
    <span class="na" style="color:rgb(101, 139, 0);">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">80:80"</span>
    <span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na" style="color:rgb(101, 139, 0);">type</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">volume</span>
        <span class="na" style="color:rgb(101, 139, 0);">source</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">mydata</span>
        <span class="na" style="color:rgb(101, 139, 0);">target</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">/data</span>
        <span class="na" style="color:rgb(101, 139, 0);">volume</span><span class="pi">:</span>
          <span class="na" style="color:rgb(101, 139, 0);">nocopy</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
      <span class="pi">-</span> <span class="na" style="color:rgb(101, 139, 0);">type</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">bind</span>
        <span class="na" style="color:rgb(101, 139, 0);">source</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">./static</span>
        <span class="na" style="color:rgb(101, 139, 0);">target</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">/opt/app/static</span>

<span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">webnet</span><span class="pi">:</span>

<span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">mydata</span><span class="pi">:</span>
</code></pre></div><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：长语法是v3.2中的新增功能</font></font></p></blockquote><div><b>Volume configuration reference</b></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>虽然可以</font><font>在文件上作<span>为服务声明的一部分</span></font><font>声明</font></font><a href="https://docs.docker.com/compose/compose-file/#volumes" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>卷</font></font></a><font><font>，但本部分允许您创建</font></font><font><font>可以跨多个服务重用的</font><font><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 255);"><b>命名卷</b></span><span><b><span><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 255);">&nbsp;</span></span><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 255);">named volumes</span></b><span>&nbsp;</span></span>（不依赖<span style="color:rgb(12, 81, 118);font-family:monospace;font-size:0.788rem;background-color:rgba(12, 81, 118, 0.0980392);">volumes_from</span></font><font>），并且可以使用docker命令行和API轻松恢复和检查。</font><font>有关</font><font>更多信息，</font><font>请参阅<span>&nbsp;</span></font></font><a href="https://docs.docker.com/engine/reference/commandline/volume_create/" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>docker volume</font></font></a><font><font>子命令文档。</font></font></p><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>这是一个双服务设置的示例，其中数据库的数据目录与另一个服务作为卷共享，以便可以定期备份它：</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3"</span>

<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">db</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">db</span>
    <span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">data-volume:/var/lib/db</span>
  <span class="na" style="color:rgb(101, 139, 0);">backup</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">backup-service</span>
    <span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">data-volume:/var/lib/backup/data</span>

<span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">data-volume</span><span class="pi">:</span>
</code></pre></div><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>顶级</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">volumes</code><font><font>键</font><font>下的条目</font><font>可以为空，在这种情况下，它使用引擎配置的默认驱动程序（在大多数情况下，这是<span>&nbsp;</span></font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">local</code><font><font>驱动程序）。</font><font>（可选）您可以使用<span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 255);">以下键进行配置</span>：</font></font><br></p><div style="color:rgb(51, 68, 76);font-size:0.875rem"><b>driver</b></div><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>指定应为此卷使用哪个卷驱动程序。</font><font>默认为Docker Engine配置使用的驱动程序，在大多数情况下是<span>&nbsp;</span></font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">local</code><font><font>。</font><font>如果驱动程序不可用，则在</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker-compose up</code><font><font>尝试创建卷</font><font>时Engine会返回错误<span>&nbsp;</span></font><font>。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">driver</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">foobar</span></code></pre></div><div><b>driver_opts</b></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>将选项列表指定为键值对，以传递给此卷的驱动程序。</font><font>这些选项取决于驱动程序 - 有关详细信息，请参阅驱动程序的文档。</font><font>可选的。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">example</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">driver_opts</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">type</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">nfs"</span>
      <span class="na" style="color:rgb(101, 139, 0);">o</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">addr=10.40.0.199,nolock,soft,rw"</span>
      <span class="na" style="color:rgb(101, 139, 0);">device</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">:/docker/example"</span></code></pre></div><div style="color:rgb(51, 68, 76);font-size:0.875rem"><b>external</b></div><div><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font><font>如果设置为</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">true</code><font><font>，则指定已在Compose之外创建此卷。</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker-compose up</code><font><font>不会尝试创建它，如果它不存在则引发错误。</font></font></font></font></div><div><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>为3.3和下面的格式的版本，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">external</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>可以不与其它卷配置键（</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">driver</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">driver_opts</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>，<span>&nbsp;</span></font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">labels</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>）<span>结合使用</span>。</font></font><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-34" style="color: rgb(0, 144, 200); text-decoration: none; font-size: 0.875rem;"><font><font>版本3.4</font></font></a><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>及更高</font><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-34" style="color:rgb(0, 144, 200);text-decoration:none;"><font>版本</font></a><font>不再存在此限制<span>&nbsp;</span></font><font>。</font></font><br></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>在下面的示例中，</font></font><font><font>Compose<span>&nbsp;</span></font><font>不是尝试创建一个叫<span style="color:rgb(12, 81, 118);font-family:monospace;font-size:0.788rem;background-color:rgba(12, 81, 118, 0.0980392);">[projectname]_data</span>的卷，而是<span>&nbsp;</span></font></font><span style="color: rgb(46, 48, 51); line-height: 23.8px;">查找一个名为data的现有卷，并将其挂载到db服务的容器中。</span></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">3'</span>

<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">db</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">postgres</span>
    <span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">data:/var/lib/postgresql/data</span>

<span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">data</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">external</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
</code></pre></div><div><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-34" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>不支持在版本3.4文件格式中</font></font></a><font><font><span>&nbsp;</span>使用</font><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-34" style="color:rgb(0, 144, 200);text-decoration:none;"><font>external.name</font></a></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">name</code><font><font>。</font></font></p></blockquote><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span style="color: rgb(51, 51, 51); font-variant-ligatures: normal; orphans: 2; widows: 2;">您还可以在Compose文件中， 使用&nbsp;</span><span style="color: rgb(51, 51, 51); font-variant-ligatures: normal; orphans: 2; widows: 2;"><span>用来指代它的名称</span></span><span style="color: rgb(51, 51, 51); font-variant-ligatures: normal; orphans: 2; widows: 2;">分别指定卷的名称：</span><br></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">data</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">external</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">name</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">actual-name-of-volume</span>
</code></pre></div><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="color: rgb(20, 136, 198); font-size: 0.875rem;"><font><font>始终使用docker stack deploy创建外部卷</font></font></p><p style="font-size: 0.875rem;"><font><font>如果使用</font><a href="https://docs.docker.com/compose/compose-file/#deploy" style="color:rgb(0, 144, 200);text-decoration:none;"><font>docker stack deploy</font></a><font>以</font><a href="https://docs.docker.com/engine/swarm/" style="color:rgb(0, 144, 200);text-decoration:none;"><font>群集模式</font></a><font>启动应用程序</font><font><span>&nbsp;</span>（而不是</font><a href="https://docs.docker.com/compose/reference/up/" style="color:rgb(0, 144, 200);text-decoration:none;"><font>docker compose up</font></a><font>），</font></font><em><font><font>则会创建</font></font></em><font><font>不存在的外部卷</font><font>。</font><font>在群集模式下，当服务定义卷时，会自动创建卷。</font><font>由于服务任务是在新节点上调度的，因此<span>&nbsp;</span></font><a href="https://github.com/docker/swarmkit/blob/master/README.md" style="color:rgb(0, 144, 200);text-decoration:none;"><font>swarmkit</font></a><font>会在本地节点上创建卷。</font><font>要了解更多信息，请参阅</font><a href="https://github.com/moby/moby/issues/29976" style="color:rgb(0, 144, 200);text-decoration:none;"><font>moby / moby＃29976</font></a><font>。</font></font></p></blockquote></div><div style="color:gray;font-size:0.875rem"><br></div><div><span style="color: rgb(51, 68, 76); font-size: 1.17rem; line-height: 1.7;"><b><span data-wiz-span="data-wiz-span" style="font-size: 0.917rem;">VOLUMES FOR SERVICES, SWARMS, AND STACK FILES</span></b></span></div><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>使用服务，群组和</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker-stack.yml</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>文件时，请记住，支持服务的任务（容器）可以部署在群中的任何节点上，每次更新服务时，这可能是不同的节点。</font></font><br></div><div><span style="color: rgb(51, 51, 51); font-size: 0.875rem;">如果没有指定源的</span><span style="color: rgb(51, 51, 51); font-size: 0.875rem;"><span style="color: rgb(51, 68, 76);">named volumes</span></span><span style="color: rgb(51, 51, 51); font-size: 0.875rem;">，Docker会为支持服务的每个任务创建一个匿名卷。删除关联的容器后，匿名卷不会保留。</span><br></div><div>如果你希望数据持久化，<font style="color: rgb(51, 68, 76); font-size: 0.875rem;">请使用可识别多主机的命名卷和卷驱动程序，以便可以从任何节点访问数据。</font><font style="color: rgb(51, 68, 76); font-size: 0.875rem;">或者，对服务设置约束，以便将其任务部署在具有卷的节点上。</font></div><div style="color:gray;font-size:0.875rem">例如，<span style="color: rgb(51, 68, 76);"><span>&nbsp;</span></span><a href="https://github.com/docker/labs/blob/master/beginner/chapters/votingapp.md" style="color: rgb(0, 144, 200); text-decoration: none;">votingapp sample in Docker Labs</a><span style="color: rgb(51, 68, 76);"><span>&nbsp;的</span></span><span style="color: rgb(51, 68, 76);"><span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);">docker-stack.yml定义了一个服务叫db，运行</span></span></span><span style="color: rgb(51, 68, 76);"><span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span>postgres数据库，<font style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><font>它被配置为命名卷（<span>named volume</span>）以在swarm上保留数据，<span>&nbsp;</span></font></font><em style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><font><font>并且</font></font></em><font style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><font>仅限于在</font></font><code class="highlighter-rouge" style="background-color: rgba(12, 81, 118, 0.0980392);">manager</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><font>节点</font><font>上运行</font><font>。</font><font>以下是该文件中的相关剪辑：</font></font></span></span></span></span></div><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3"</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">db</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">postgres:9.4</span>
    <span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">db-data:/var/lib/postgresql/data</span>
    <span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">backend</span>
    <span class="na" style="color:rgb(101, 139, 0);">deploy</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">placement</span><span class="pi">:</span>
        <span class="na" style="color:rgb(101, 139, 0);">constraints</span><span class="pi">:</span> <span class="pi">[</span><span class="nv" style="color:rgb(0, 104, 139);">node.role == manager</span><span class="pi">]</span></code></pre></div><h4 id="caching-options-for-volume-mounts-docker-desktop-for-mac" style="color: rgb(51, 68, 76);"><span data-wiz-span="data-wiz-span" style="font-size: 0.917rem;">CACHING OPTIONS FOR VOLUME MOUNTS (DOCKER DESKTOP FOR MAC)</span></h4><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">On Docker 17.04 CE Edge and up, including 17.06 CE Edge and Stable, you can configure container-and-host consistency requirements for bind-mounted directories in Compose files to allow for better performance on read/write of volume mounts. These options address issues specific to<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">osxfs</code><span>&nbsp;</span>file sharing, and therefore are only applicable on Docker Desktop for Mac.</p><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">The flags are:</p><div><ul style="color: rgb(51, 68, 76); font-size: 0.875rem;"><li><p><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">consistent</code>: Full consistency. The container runtime and the host maintain an identical view of the mount at all times. This is the default.</p></li><li><p><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">cached</code>: The host’s view of the mount is authoritative. There may be delays before updates made on the host are visible within a container.</p></li><li><p><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">delegated</code>: The container runtime’s view of the mount is authoritative. There may be delays before updates made in a container are visible on the host.</p></li></ul></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">Here is an example of configuring a volume as<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">cached</code>:</p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">3'</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">php</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">php:7.1-fpm</span>
    <span class="na" style="color:rgb(101, 139, 0);">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">9000"</span>
    <span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">.:/var/www/project:cached</span>
</code></pre></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">Full detail on these flags, the problems they solve, and their<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker run</code><span>&nbsp;</span>counterparts is in the Docker Desktop for Mac topic<span>&nbsp;</span><a href="https://docs.docker.com/docker-for-mac/osxfs-caching/" style="color:rgb(0, 144, 200);text-decoration:none;">Performance tuning for volume mounts (shared filesystems)</a>.<br></p><div style="color:gray;font-size:0.875rem"><br></div><h3 id="logging" style="color: rgb(51, 68, 76); font-size: 1.375rem;"><span><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);">network_mode</span></span><br></h3><h3 id="logging" style="color: rgb(51, 68, 76); font-size: 1.375rem;"></h3><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>网络模式。</font><font>使用与docker client<span>&nbsp;</span></font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">--network</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>参数</font><font>相同的值，加上</font><font>特殊表单</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">service:[service name]</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>。</font></font><h3 id="logging" style="color: rgb(51, 68, 76); font-size: 1.375rem;"></h3><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code>network_mode: "bridge"
network_mode: "host"
network_mode: "none"
network_mode: "service:[service name]"
network_mode: "container:[container name/id]"</code></pre><h3 id="logging" style="color: rgb(51, 68, 76); font-size: 1.375rem;"></h3><p style="color: rgb(20, 136, 198); font-size: 0.875rem;"><strong>Notes</strong></p><ul style="color: rgb(51, 68, 76); font-size: 1.094rem;"><li style="font-size:0.875rem;"><p>This option is ignored when<span>&nbsp;</span><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;">deploying a stack in swarm mode</a><span>&nbsp;</span>with a (version 3) Compose file.</p></li><li style="font-size:0.875rem;"><p><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">network_mode: "host"</code><span>&nbsp;</span>cannot be mixed with<span>&nbsp;</span><a href="https://docs.docker.com/compose/compose-file/#links" style="color:rgb(0, 144, 200);text-decoration:none;">links</a>.</p></li></ul><h3 id="logging" style="color: rgb(51, 68, 76); font-size: 1.375rem;"><span><span data-wiz-span="data-wiz-span" style="color: rgb(255, 0, 0);">networks</span></span><br></h3><h3 id="logging" style="color: rgb(51, 68, 76); font-size: 1.375rem;"></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">Networks to join, referencing entries under the<span>&nbsp;</span><a href="https://docs.docker.com/compose/compose-file/#network-configuration-reference" style="color:rgb(0, 144, 200);text-decoration:none;">top-level<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">networks</code><span>&nbsp;</span>key</a>.</p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">some-service</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
     <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">some-network</span>
     <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">other-network</span></code></pre></div><h3 id="logging" style="color: rgb(51, 68, 76); font-size: 1.375rem;"></h3><h5>ALIASES</h5><h3 id="logging" style="color: rgb(51, 68, 76); font-size: 1.375rem;"></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>网络上此服务的别名（备用主机名）。</font><font>同一网络上的其他容器可以使用服务名称或此别名连接到其中一个服务的容器。</font></font></p><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>由于</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">aliases</code><font><font>是网络范围的，因此相同的服务可以在不同的网络上具有不同的别名。</font></font></p><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：网络范围的别名可以由多个容器共享，甚至可以由多个服务共享。</font><font>如果这样使用，则无法保证名称解析为哪个容器。</font></font></p></blockquote><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>一般格式如下所示。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">some-service</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">some-network</span><span class="pi">:</span>
        <span class="na" style="color:rgb(101, 139, 0);">aliases</span><span class="pi">:</span>
         <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">alias1</span>
         <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">alias3</span>
      <span class="na" style="color:rgb(101, 139, 0);">other-network</span><span class="pi">:</span>
        <span class="na" style="color:rgb(101, 139, 0);">aliases</span><span class="pi">:</span>
         <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">alias2</span></code></pre></div><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>在下面的例子中，提供了三种服务（</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">web</code><font><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">worker</code><font><font>，和</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">db</code><font><font>），和两个网络（<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">new</code><span><span>&nbsp;</span>and<span>&nbsp;</span></span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">legacy</code></font></font><font><font>）。在<code class="highlighter-rouge" style="font-size:0.788rem;color:rgb(12, 81, 118) !important;background-color:rgba(12, 81, 118, 0.0980392);">new</code><span><span>&nbsp;网络上，</span></span></font><font>该</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">db</code><font><font>服务可以通过主机名</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">db</code><font><font>或</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">database被访问</code><font><font>，在<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">legacy</code><span><font face="Open Sans, sans-serif">&nbsp;网络上，</font>可以通过</span></font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">db</code><font><font>或</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">mysql被访问</code><font><font>。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">2'</span>

<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">web</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">build</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">./web</span>
    <span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">new</span>

  <span class="na" style="color:rgb(101, 139, 0);">worker</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">build</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">./worker</span>
    <span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">legacy</span>

  <span class="na" style="color:rgb(101, 139, 0);">db</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">mysql</span>
    <span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">new</span><span class="pi">:</span>
        <span class="na" style="color:rgb(101, 139, 0);">aliases</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">database</span>
      <span class="na" style="color:rgb(101, 139, 0);">legacy</span><span class="pi">:</span>
        <span class="na" style="color:rgb(101, 139, 0);">aliases</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">mysql</span>

<span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">new</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">legacy</span><span class="pi">:</span></code></pre></div><div class="language-yaml highlighter-rouge" style="color:rgb(51, 68, 76);font-size:0.875rem"></div><h4 id="ipv4_address-ipv6_address" style="color: rgb(51, 68, 76);"><font><font>IPV4_ADDRESS，IPV6_ADDRESS</font></font></h4><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>在加入网络时为此服务指定容器的静态IP地址。</font></font></p><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>在<a href="https://docs.docker.com/compose/compose-file/#network-configuration-reference" style="color: rgb(0, 144, 200); text-decoration: none;">top-level networks section</a>对应的网络设置中必须存在一个<code class="highlighter-rouge" style="font-size:0.788rem;color:rgb(12, 81, 118) !important;background-color:rgba(12, 81, 118, 0.0980392);">ipam</code><span>&nbsp;块，包含覆盖每个静态地址的子网设置。</span><span><span>如果需要IPv6寻址，<a href="https://docs.docker.com/compose/compose-file/#enableipv6" style="color: rgb(0, 144, 200); text-decoration: none;"><code class="highlighter-rouge" style="font-size:0.788rem;color:rgb(12, 81, 118) !important;background-color:rgba(12, 81, 118, 0.0980392);">enable_ipv6</code></a></span></span><span><span><span>&nbsp;选项必须存在，并且必须使用2.X版本的Compose文件，</span></span></span><span><span><span><span>如下所示。</span></span></span></span></font></font></p><div style="color:gray;font-size:0.875rem"><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：这些选项目前不适用于群集模式。</font></font><br></p></blockquote></div><p style="color:rgb(51, 68, 76);font-size:0.875rem">An example:</p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">2.1'</span>

<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">app</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">busybox</span>
    <span class="na" style="color:rgb(101, 139, 0);">command</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">ifconfig</span>
    <span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">app_net</span><span class="pi">:</span>
        <span class="na" style="color:rgb(101, 139, 0);">ipv4_address</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">172.16.238.10</span>
        <span class="na" style="color:rgb(101, 139, 0);">ipv6_address</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">2001:3984:3989::10</span>

<span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">app_net</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">driver</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">bridge</span>
    <span class="na" style="color:rgb(101, 139, 0);">enable_ipv6</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
    <span class="na" style="color:rgb(101, 139, 0);">ipam</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">driver</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">default</span>
      <span class="na" style="color:rgb(101, 139, 0);">config</span><span class="pi">:</span>
      <span class="pi">-</span>
        <span class="na" style="color:rgb(101, 139, 0);">subnet</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">172.16.238.0/24</span>
      <span class="pi">-</span>
        <span class="na" style="color:rgb(101, 139, 0);">subnet</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">2001:3984:3989::/64</span></code></pre></div><h3 id="logging" style="color: rgb(51, 68, 76); font-size: 1.375rem;">logging</h3><div><span style="color: rgb(255, 0, 0); font-size: 1.5rem; line-height: 1.7;"><font style="color: rgb(206, 72, 68); font-size: 0.875rem;"><font>service的日志配置</font></font></span></div><div><span style="color: rgb(255, 0, 0); font-size: 1.5rem; line-height: 1.7;"><font style="color: rgb(206, 72, 68); font-size: 0.875rem;"><font><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">logging</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">driver</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">syslog</span>
  <span class="na" style="color:rgb(101, 139, 0);">options</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">syslog-address</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">tcp://192.168.0.42:123"</span></code></pre><p style="color: rgb(51, 68, 76);"><font><font>该</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">driver</code><font><font><span>&nbsp;</span>名称指定服务容器的日志记录驱动程序，与</font></font><font><font>docker run的<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">--log-driver</span>选项一样<span>(</span><a href="https://docs.docker.com/engine/admin/logging/overview/" style="color: rgb(0, 144, 200); text-decoration: none;">documented here</a><span>).</span></font></font><font><font>。</font></font></p><p style="color: rgb(51, 68, 76);"><font><font>默认值为json-file。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76)"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code>driver: "json-file"
driver: "syslog"
driver: "none"</code></pre></div><span style="font-size: 0.833rem; color: rgb(255, 255, 255);"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);">注意：只有&nbsp;</span></span><span style="font-size: 0.833rem; color: rgb(255, 255, 255);"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);"><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);">json-file</span></span></span><span style="font-size: 0.833rem; color: rgb(255, 255, 255);"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);">和<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">journald</code></span></span><span style="font-size: 0.833rem; color: rgb(255, 255, 255);"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);"><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>&nbsp;</span></span></span></span><span style="font-size: 0.833rem; color: rgb(255, 255, 255);"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);">可以直接从docker-compose&nbsp;up和docker-compose logs中获取日志。&nbsp;使用任何其他驱动程序不会打印任何日志。</span></span><br></font></font></span></div><div><font color="#ce4844"><span style="font-size: 0.875rem; line-height: 23.8px;">通过<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">options</code></span><span style="font-size: 0.875rem; line-height: 23.8px;"><span style="color: rgb(51, 68, 76);"><span>&nbsp;为</span></span></span><span style="font-size: 0.875rem; line-height: 23.8px;"><span style="color: rgb(51, 68, 76);"><span><span>logging driver</span></span></span></span><span style="font-size: 0.875rem; line-height: 23.8px;"><span style="color: rgb(51, 68, 76);"><span>指定日志选项，与</span></span></span><span style="font-size: 0.875rem; line-height: 23.8px;"><span style="color: rgb(51, 68, 76);"><span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);">docker run的</span></span></span></span><span style="font-size: 0.875rem; line-height: 23.8px;"><span style="color: rgb(51, 68, 76);"><span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span>--log-opt选项一样。</span></span></span></span></span></font></div><div><font color="#ce4844"><span style="font-size: 0.875rem; line-height: 23.8px;"><span style="color: rgb(51, 68, 76);"><span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span>Logging</span></span></span></span></span></font><font style="color: rgb(51, 68, 76); font-size: 0.875rem; line-height: 23.8px;">选项是键值对。</font><code class="highlighter-rouge" style="line-height: 23.8px; font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">syslog</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem; line-height: 23.8px;">选项的一个例子：</font></div><div class="highlight" style="font-size: 0.875rem; line-height: 23.8px; color: rgb(51, 68, 76);"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">driver</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">syslog"</span>
<span class="na" style="color:rgb(101, 139, 0);">options</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">syslog-address</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">tcp://192.168.0.42:123"</span></code></pre><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><p style="color:rgb(51, 68, 76);font-size:0.875rem;background-color:rgb(255, 255, 255)"><font><font>默认驱动程序</font></font><a href="https://docs.docker.com/engine/admin/logging/overview/#json-file" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>json-file</font></font></a><font><font>具有限制存储日志量的选项。</font><font>为此，请使用键值对来获得最大存储大小和最大文件数：</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem;background-color:rgb(255, 255, 255)"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">options</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">max-size</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">200k"</span>
  <span class="na" style="color:rgb(101, 139, 0);">max-file</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">10"</span></code></pre></div><p style="color:rgb(51, 68, 76);font-size:0.875rem;background-color:rgb(255, 255, 255)"><font><font>上面显示的示例将存储日志文件，直到它们达到</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">max-size</code><font><font>200kB，然后转存它们。</font><font>存储的各个日志文件的数量由</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">max-file</code><font><font>值</font><font>指定</font><font>。</font><font>随着日志超出最大</font></font></p><p style="color:rgb(51, 68, 76);font-size:0.875rem;background-color:rgb(255, 255, 255)"><font><font>限制，将删除较旧的日志文件以允许存储新日志。</font></font></p><p style="color:rgb(51, 68, 76);font-size:0.875rem;background-color:rgb(255, 255, 255)"><font><font>以下是</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker-compose.yml</code><font><font>限制日志记录存储</font><font>的示例</font><font>文件：</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem;background-color:rgb(255, 255, 255)"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">3.7'</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">some-service</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">some-service</span>
    <span class="na" style="color:rgb(101, 139, 0);">logging</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">driver</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">json-file"</span>
      <span class="na" style="color:rgb(101, 139, 0);">options</span><span class="pi">:</span>
        <span class="na" style="color:rgb(101, 139, 0);">max-size</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">200k"</span>
        <span class="na" style="color:rgb(101, 139, 0);">max-file</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">10"</span></code></pre></div><p style="color:rgb(20, 136, 198);font-size:0.875rem;background-color:rgb(255, 255, 255)"><font><font>可用的日志选项取决于您使用的日志记录驱动程序</font></font></p><p style="color:rgb(51, 68, 76);font-size:0.875rem;background-color:rgb(255, 255, 255)"><font><font>上面用于控制日志文件和大小的示例使用特定于<a href="https://docs.docker.com/engine/admin/logging/overview/#json-file" style="color: rgb(35, 82, 124); text-decoration: none;">json-file driver</a></font></font><font><font>选项</font><font>。</font><font>其他日志记录驱动程序不提供这些特定选项。</font><font>有关支持的日志记录驱动及</font></font></p><p style="color:rgb(51, 68, 76);font-size:0.875rem;background-color:rgb(255, 255, 255)"><font><font>其选项的完整列表，请参阅<a href="https://docs.docker.com/engine/admin/logging/overview/" style="color: rgb(0, 144, 200); text-decoration: none;">logging drivers</a><span>.</span></font></font></p></code></pre></div><h3 id="deploy" style="color: rgb(51, 68, 76);"><span data-wiz-span="data-wiz-span" style="font-size:1.5rem">env_file</span></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>从文件添加环境变量。</font><font>可以是单个值或列表。</font></font></p><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>如果已通过<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">docker-compose -f FILE</span>指定Compose文件</font></font><font><font>，则<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">env_file中的路径是</span></font></font><font><font>相对于该文件所在的目录。</font></font></p><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>在<a href="https://docs.docker.com/compose/compose-file/#environment" style="color: rgb(35, 82, 124); text-decoration: none;">environment</a></font></font><font><font>部分中<span>&nbsp;</span></font><font>声明的环境变量</font></font><em><font><font>会覆盖</font></font></em><font><font>这些值 - 即使这些值为空或未定义，这也适用。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">env_file</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">.env</span>
</code></pre></div><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">env_file</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">./common.env</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">./apps/web.env</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">/opt/secrets.env</span></code></pre></div><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>Compose期望env文件中的每一行都是</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">VAR=VAL</code><font><font>格式化的。</font><font>以<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">#</span>开头的行</font></font><font><font>被视为注释并被忽略。</font><font>空行也被忽略。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="c" style="color:rgb(34, 139, 34);"># Set Rails/Rack environment</span>
<span class="nv" style="color:rgb(0, 104, 139);">RACK_ENV</span><span class="o">=</span>development</code></pre></div><div class="language-yaml highlighter-rouge" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：如果您的服务指定了<span><span>&nbsp;</span></span><a href="https://docs.docker.com/compose/compose-file/#build" style="color: rgb(0, 144, 200); text-decoration: none;">build</a><span><span>&nbsp;</span></span></font></font><font><font>选项，则</font><font>在构建期间</font><font>，<font><font>环境文件中定义的变量</font></font><em><font><font>不会</font></font></em><font><font>自动显示。<font><font>使用<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">build的</span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);"><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);">子选项</span></span></font></font><a href="https://docs.docker.com/compose/compose-file/#args" style="color: rgb(0, 144, 200); text-decoration: none;"><font><font>args</font></font></a><font><font>定义构建时环境变量。</font></font></font></font></font></font><br></div><div class="language-yaml highlighter-rouge" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font style=""><span style="font-size:0.833rem;color:#ffffff;font-family:'Tahoma';"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);">VAL</span></span><span style="font-size: 0.833rem; color: rgb(255, 255, 255);"><span><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);">的值按原样使用，根本不进行修改。&nbsp;例如，如果值由引号括起（通常是shell变量的情况），则引号包含在传递给Compose的值中。</span></span></span><br></font></div><div class="language-yaml highlighter-rouge" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span style="color: rgb(51, 51, 51);">请记住，列表中文件的顺序对于确定分配给多次显示的变量的值非常重要。列表中的文件从上到下进行处理。对于文件a.env中指定的相同变量，并在文件b.env中指定了不同的值，如果b.env列在下面（后面），则取b.env中的值。例如，在docker-compose.yml中给出以下声明：</span><br></div><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">some-service</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">env_file</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">a.env</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">b.env</span>
</code></pre></div><p style="color:rgb(51, 68, 76);font-size:0.875rem">And the following files:</p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="c" style="color:rgb(34, 139, 34);"># a.env</span>
<span class="nv" style="color:rgb(0, 104, 139);">VAR</span><span class="o">=</span>1
</code></pre></div><p style="color:rgb(51, 68, 76);font-size:0.875rem">and</p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="c" style="color:rgb(34, 139, 34);"># b.env</span>
<span class="nv" style="color:rgb(0, 104, 139);">VAR</span><span class="o">=</span>hello
</code></pre></div><p style="color:rgb(51, 68, 76);font-size:0.875rem"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">$VAR</code><span>&nbsp;</span>is<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">hello</code>.</p><div class="language-yaml highlighter-rouge" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></div><h3 id="deploy" style="color: rgb(51, 68, 76);"><span style=""><span data-wiz-span="data-wiz-span"><span><span>DNS</span></span></span></span></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>自定义DNS服务器。</font><font>可以是单个值或列表。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">dns</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">8.8.8.8</span>
<span class="na" style="color:rgb(101, 139, 0);">dns</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">8.8.8.8</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">9.9.9.9</span></code></pre></div><h3 id="deploy" style="color: rgb(51, 68, 76);"><span style=""><span data-wiz-span="data-wiz-span"><span><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem;">dns_search</span></span></span></span></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>自定义DNS搜索域。</font><font>可以是单个值或列表。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">dns_search</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">example.com</span>
</code></pre></div><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">dns_search</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">dc1.example.com</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">dc2.example.com</span></code></pre></div><h3 id="deploy" style="color: rgb(51, 68, 76);"><span style=""><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem;"><span>external_links</span><br></span></span></h3><div><span style=""><span data-wiz-span="data-wiz-span" style="font-size:0.875rem;color:rgb(51, 68, 76)">链接到外部容器，这些容器不是由</span></span><span style=""><span data-wiz-span="data-wiz-span" style="font-size:0.875rem;color:rgb(51, 68, 76)">docker-compose.yml启动，甚至不属于</span></span><span style=""><span data-wiz-span="data-wiz-span" style="font-size:0.875rem;color:rgb(51, 68, 76)"><span>Compose，</span></span></span><span style=""><span data-wiz-span="data-wiz-span" style="font-size:0.875rem;color:rgb(51, 68, 76)"><span><span>尤其是提供共享或公共服务的容器。</span></span></span></span><span style=""><span data-wiz-span="data-wiz-span" style="font-size:0.875rem;color:rgb(51, 68, 76)"><span><span><span style="color: rgb(51, 51, 51);">在指定容器名称和链接别名（CONTAINER：ALIAS）时，external_links遵循与<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">links</code></span></span></span></span></span><span style=""><span style="color:rgb(51, 68, 76);font-size:0.875rem">&nbsp;</span></span><span style=""><span data-wiz-span="data-wiz-span" style="font-size:0.875rem;color:rgb(51, 68, 76)"><span><span><span style="color: rgb(51, 51, 51);">类似的语义。</span></span></span></span></span></div><h3 id="deploy" style="color: rgb(51, 68, 76);"></h3><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">external_links</span><span class="pi">:</span>
 <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">redis_1</span>
 <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">project_db_1:mysql</span>
 <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">project_db_1:postgresql</span></code></pre><div><span style=""><span data-wiz-span="data-wiz-span">注意：</span></span></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>如果您使用的是</font></font><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-2" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>版本2或更高版本的文件格式</font></font></a><font><font>，则外部创建的容器必须至少连接到与链接它们的服务所在网络相同的网络之一。<a href="https://docs.docker.com/compose/compose-file/compose-file-v2#links" style="color: rgb(0, 144, 200); text-decoration: none;">Links</a><span><span>&nbsp;</span></span></font></font><font><font>是一种传统选择。</font><font>我们建议使用<span><span>&nbsp;</span></span><a href="https://docs.docker.com/compose/compose-file/#networks" style="color: rgb(0, 144, 200); text-decoration: none;">networks</a></font></font><font><font>。</font></font></p><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>在群集模式下</font></font></a><font><font><span>&nbsp;</span>使用（版本3）Compose文件</font><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;"><font>部署堆栈</font></a><font>时，</font><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;"><font>将</font></a><font>忽略此选项</font><font>。</font></font></p><div></div><h3 id="extra_hosts" style="color: rgb(51, 68, 76);"><font><font><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem;">extra_hosts</span></font></font></h3><h3 id="deploy" style="color: rgb(51, 68, 76);"></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>添加主机名映射。</font><font>使用与docker client<span>&nbsp;</span></font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">--add-host</code><font><font>参数</font><font>相同的值</font><font>。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">extra_hosts</span><span class="pi">:</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">somehost:162.242.195.82"</span>
 <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">otherhost:50.31.209.229"</span>
</code></pre></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>在</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">/etc/hosts</code><font><font>此服务的内部容器中</font><font>创建具有ip地址和主机名的条目</font><font>，例如：</font></font></p><pre style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code class="language-none">162.242.195.82  somehost
50.31.209.229   otherhost</code><br><div style="color:gray;"></div></pre><h3 id="healthcheck" style="color: rgb(51, 68, 76);"><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem;">healthcheck</span></h3><div><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-21" style="color: rgb(0, 144, 200); text-decoration: none; font-size: 0.875rem;"><font><font>版本2.1文件格式</font></font></a><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>及以上。</font></font><br></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>配置运行的检查以确定此服务的容器是否“健康”。</font><font>有关</font><font><span>&nbsp;</span>healthchecks如何工作的详细信息，</font><font>请参阅</font></font><a href="https://docs.docker.com/engine/reference/builder/#healthcheck" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>HEALTHCHECK Dockerfile指令</font></font></a><font><font>的文档<span>&nbsp;</span></font><font>。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">healthcheck</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">test</span><span class="pi">:</span> <span class="pi">[</span><span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">CMD"</span><span class="pi">,</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">curl"</span><span class="pi">,</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">-f"</span><span class="pi">,</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">http://localhost"</span><span class="pi">]</span>
  <span class="na" style="color:rgb(101, 139, 0);">interval</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">1m30s</span>
  <span class="na" style="color:rgb(101, 139, 0);">timeout</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">10s</span>
  <span class="na" style="color:rgb(101, 139, 0);">retries</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">3</span>
  <span class="na" style="color:rgb(101, 139, 0);">start_period</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">40s</span></code></pre></div><div class="language-yaml highlighter-rouge"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">interval</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">timeout</code><code class="highlighter-rouge" style="font-size: 0.875rem; line-height: 23.8px;"><font color="#33444c" face="Open Sans, sans-serif">和</font></code><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">start_period</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>指定为<a href="https://docs.docker.com/compose/compose-file/#specifying-durations" style="color: rgb(0, 144, 200); text-decoration: none;">durations</a><span>.</span></font></font></div><div style="color:gray;font-size:0.875rem"><strong style="color: rgb(51, 68, 76);"><font><font>注意</font></font></strong><font style="color: rgb(51, 68, 76);"><font>：</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">start_period</code><font style="color: rgb(51, 68, 76);"><font>仅支持v3.4及更高版本的撰写文件格式。</font></font><br></div><p style="color:rgb(51, 68, 76);font-size:0.875rem"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">test</code><font><font>必须是字符串或列表。</font><font>如果是列表，则第一项必须是</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">NONE</code><font><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">CMD</code><font><font>或者</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">CMD-SHELL</code><font><font>。</font><font>如果它是一个字符串，则相当于指定</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">CMD-SHELL</code><font><font>后跟该字符串。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="c1" style="color:rgb(34, 139, 34);"># Hit the local web app</span>
<span class="na" style="color:rgb(101, 139, 0);">test</span><span class="pi">:</span> <span class="pi">[</span><span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">CMD"</span><span class="pi">,</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">curl"</span><span class="pi">,</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">-f"</span><span class="pi">,</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">http://localhost"</span><span class="pi">]</span></code></pre></div><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>如上所述，但包裹在内</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">/bin/sh</code><font><font>。</font><font>以下两种形式都是等同的。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">test</span><span class="pi">:</span> <span class="pi">[</span><span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">CMD-SHELL"</span><span class="pi">,</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">curl</span><span class="nv" style="color:rgb(0, 104, 139);"> </span><span class="s" style="color:rgb(205, 85, 85);">-f</span><span class="nv" style="color:rgb(0, 104, 139);"> </span><span class="s" style="color:rgb(205, 85, 85);">http://localhost</span><span class="nv" style="color:rgb(0, 104, 139);"> </span><span class="s" style="color:rgb(205, 85, 85);">||</span><span class="nv" style="color:rgb(0, 104, 139);"> </span><span class="s" style="color:rgb(205, 85, 85);">exit</span><span class="nv" style="color:rgb(0, 104, 139);"> </span><span class="s" style="color:rgb(205, 85, 85);">1"</span><span class="pi">]</span>
</code></pre></div><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">test</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">curl -f https://localhost || exit 1</span></code></pre></div><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>要禁用镜像设置的任何默认<span>healthcheck<span>&nbsp;</span></span>，您可以使用</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">disable: true</code><font><font>。</font><font>这相当于指定</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">test: ["NONE"]</code><font><font>。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">healthcheck</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">disable</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span></code></pre></div><div style="color:gray;font-size:0.875rem"><br></div><div style="color:gray;font-size:0.875rem"></div><h3 id="pid" style="color: rgb(51, 68, 76); font-size: 1.375rem;">pid</h3><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code>pid: "host"</code></pre></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>将PID模式设置为主机PID模式。</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span>这打开了容器和主机操作系统之间的PID地址空间共享。</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span>使用此标志启动的容器可以访问和操作裸机计算机命名空间中的其他容器，反之亦然。</span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></span></div><div style="color:gray;font-size:0.875rem"><br></div><h3 id="deploy" style="color: rgb(51, 68, 76);"><span style=""><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem;">deploy</span></span></h3><div><strong style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>仅限</font><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-3" style="color:rgb(0, 144, 200);text-decoration:none;"><font>第3版</font></a><font>。</font></font></strong><br></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;">指定与部署和运行服务相关的配置。这只在部署</span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span>&nbsp;</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><a href="https://docs.docker.com/engine/swarm/" style="color: rgb(0, 144, 200); text-decoration: none;">swarm</a></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span>&nbsp;</span>with<span>&nbsp;</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color: rgb(0, 144, 200); text-decoration: none;">docker stack deploy</a>时生效，并且被<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker-compose up</code></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span>&nbsp;</span>and<span>&nbsp;</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker-compose run</code><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);"><font face="Open Sans, sans-serif">忽略。</font></code></span><br></div><div><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">3'</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">redis</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">redis:alpine</span>
    <span class="na" style="color:rgb(101, 139, 0);">deploy</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">replicas</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">6</span>
      <span class="na" style="color:rgb(101, 139, 0);">update_config</span><span class="pi">:</span>
        <span class="na" style="color:rgb(101, 139, 0);">parallelism</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">2</span>
        <span class="na" style="color:rgb(101, 139, 0);">delay</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">10s</span>
      <span class="na" style="color:rgb(101, 139, 0);">restart_policy</span><span class="pi">:</span>
        <span class="na" style="color:rgb(101, 139, 0);">condition</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">on-failure</span></code></pre><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>有几个子选项可供选择：</font></font></p><h4 id="endpoint_mode" style="color: rgb(51, 68, 76);"><font><font><span data-wiz-span="data-wiz-span" style="font-size: 1rem;">ENDPOINT_MODE</span></font></font></h4><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>为连接到群集的外部客户端指定服务发现方法。</font></font></p><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong><font><font>仅限</font><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-3" style="color:rgb(0, 144, 200);text-decoration:none;"><font>3.3版</font></a><font>。</font></font></strong></p></blockquote><ul style="color: rgb(51, 68, 76); font-size: 0.875rem;"><li><p><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">endpoint_mode: vip</code><font><font><span>&nbsp;</span>- Docker为服务分配虚拟IP（VIP），作为客户端到达网络服务的前端。</font><font>Docker在客户端和服务的可用工作节点之间路由请求，而无需客户端知道有多少节点参与服务或其IP地址或端口。</font><font>（这是默认设置。）</font></font></p></li><li><p><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">endpoint_mode: dnsrr</code><font><font><span>&nbsp;</span>- DNS循环（DNSRR）服务发现不使用单个虚拟IP。</font><font>Docker为服务设置DNS条目，以便服务名称的DNS查询返回IP地址列表，并且客户端直接连接到其中一个。</font><font>在您要使用自己的负载均衡器或混合Windows和Linux应用程序的情况下，DNS循环法非常有用。</font></font></p></li></ul><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3.3"</span>

<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">wordpress</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">wordpress</span>
    <span class="na" style="color:rgb(101, 139, 0);">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">8080:80"</span>
    <span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">overlay</span>
    <span class="na" style="color:rgb(101, 139, 0);">deploy</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">mode</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">replicated</span>
      <span class="na" style="color:rgb(101, 139, 0);">replicas</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">2</span>
      <span class="na" style="color:rgb(101, 139, 0);">endpoint_mode</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">vip</span>

  <span class="na" style="color:rgb(101, 139, 0);">mysql</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">mysql</span>
    <span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
       <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">db-data:/var/lib/mysql/data</span>
    <span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
       <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">overlay</span>
    <span class="na" style="color:rgb(101, 139, 0);">deploy</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">mode</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">replicated</span>
      <span class="na" style="color:rgb(101, 139, 0);">replicas</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">2</span>
      <span class="na" style="color:rgb(101, 139, 0);">endpoint_mode</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">dnsrr</span>

<span class="na" style="color:rgb(101, 139, 0);">volumes</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">db-data</span><span class="pi">:</span>

<span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">overlay</span><span class="pi">:</span></code></pre></div><div style="color:gray;font-size:0.875rem"><small>其余参数见：https://docs.docker.com/compose/compose-file/#deploy</small></div><br></div><div></div><h3 id="entrypoint" style="color: rgb(51, 68, 76);"><span><span data-wiz-span="data-wiz-span" style="font-size: 1.5rem;">environment</span></span><br></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font><span>您可以使用数组或字典</span>添加环境变量</font><font>。</font><font>任何布尔值;<span>&nbsp;</span></font><font>true，false，yes no，需要用引号括起来，以确保YML解析器不会将它们转换为True或False。</font></font></p><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>仅具有key的环境变量将解析为计算机正在运行的计算机上的值，这对于保密或特定于主机的值很有用。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">environment</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">RACK_ENV</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">development</span>
  <span class="na" style="color:rgb(101, 139, 0);">SHOW</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">true'</span>
  <span class="na" style="color:rgb(101, 139, 0);">SESSION_SECRET</span><span class="pi">:</span>
</code></pre></div><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">environment</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">RACK_ENV=development</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">SHOW=true</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">SESSION_SECRET</span>
</code></pre></div><div><span><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：如果您的服务指定了<span><span>&nbsp;</span></span><a href="https://docs.docker.com/compose/compose-file/#build" style="color:rgb(0, 144, 200);text-decoration:none;">build</a><span><span>&nbsp;</span></span></font></font><font><font>选项，则</font><font>在构建期间</font><font>，<font><font>环境文件中定义的变量</font></font><em><font><font>不会</font></font></em><font><font>自动显示。<font><font>使用<span style="color:rgb(12, 81, 118);font-size:0.788rem;background-color:rgba(12, 81, 118, 0.0980392);">build的</span><span style="color:rgb(12, 81, 118);font-size:0.788rem;background-color:rgba(12, 81, 118, 0.0980392);"><span style="color:rgb(51, 68, 76);font-size:0.875rem;background-color:rgb(255, 255, 255);">子选项</span></span></font></font><a href="https://docs.docker.com/compose/compose-file/#args" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>args</font></font></a><font><font>定义构建时环境变量。</font></font></font></font></font></font><br></p><br><div style="color:gray;"><span style="font-size: 1.25rem; font-weight: bold; line-height: 1.7;"><span data-wiz-span="data-wiz-span" style="color: rgb(0, 0, 0);">CACHE_FROM</span></span><br></div></blockquote></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：此选项是v3.2中的新选项</font></font><br></span></div><p style="color:rgb(51, 68, 76);font-size:0.875rem">A list of images that the engine uses for cache resolution.</p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">build</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">context</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">.</span>
  <span class="na" style="color:rgb(101, 139, 0);">cache_from</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">alpine:latest</span>
    <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">corp/web_app:3.14</span></code></pre></div><h3>LABELS</h3><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：此选项是v3.2中的新选项</font></font><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font><font><font>使用</font></font><a href="https://docs.docker.com/engine/userguide/labels-custom-metadata/" style="color: rgb(0, 144, 200); text-decoration: none;"><font><font>Docker标签</font></font></a><font><font>将元数据添加到生成的图像中</font><font>。</font><font>您可以使用数组或字典。</font></font><br></font></font></span></div><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>我们建议您使用反向DNS表示法来防止您的标签与其他软件使用的标签冲突。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">build</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">context</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">.</span>
  <span class="na" style="color:rgb(101, 139, 0);">labels</span><span class="pi">:</span>
    <span class="s" style="color:rgb(205, 85, 85);">com.example.description</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">Accounting</span><span class="nv" style="color:rgb(0, 104, 139);"> </span><span class="s" style="color:rgb(205, 85, 85);">webapp"</span>
    <span class="s" style="color:rgb(205, 85, 85);">com.example.department</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">Finance"</span>
    <span class="s" style="color:rgb(205, 85, 85);">com.example.label-with-empty-value</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">"</span>
</code></pre></div><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">build</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">context</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">.</span>
  <span class="na" style="color:rgb(101, 139, 0);">labels</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">com.example.description=Accounting</span><span class="nv" style="color:rgb(0, 104, 139);"> </span><span class="s" style="color:rgb(205, 85, 85);">webapp"</span>
    <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">com.example.department=Finance"</span>
    <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">com.example.label-with-empty-value"</span></code></pre></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font><h3><font><font>SHM_SIZE</font></font></h3><font><font>在</font></font><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-35" style="color: rgb(0, 144, 200); text-decoration: none;"><font><font>3.5版</font></font></a><font><font>文件格式中添加</font></font><br></font></font></span></div><p style="color:rgb(51, 68, 76);font-size:0.875rem"><font><font>设置</font></font><font><font>此构建容器</font><font>的<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">/dev/shm</span></font><font>分区</font><font>大小</font><font>。</font><font>指定为表示字节数的整数值或表示</font></font><a href="https://docs.docker.com/compose/compose-file/#specifying-byte-values" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>字节值</font></font></a><font><font>的字符串</font><font>。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">build</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">context</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">.</span>
  <span class="na" style="color:rgb(101, 139, 0);">shm_size</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">2gb'</span>
</code></pre></div><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">build</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">context</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">.</span>
  <span class="na" style="color:rgb(101, 139, 0);">shm_size</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">10000000</span></code></pre></div><h3>TARGET</h3><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font><font><font>在</font></font><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-34" style="color: rgb(0, 144, 200); text-decoration: none;"><font><font>3.4版</font></font></a><font><font>文件格式中添加</font></font><br></font></font></span></div><div><font color="#33444c"><span style="font-size: 0.875rem; line-height: 23.8px;">按照</span><span style="font-size: 0.875rem; line-height: 23.8px;"><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);">Dockerfile内部定义构建指定的阶段</span></span><span style="font-size: 0.875rem; line-height: 23.8px;"><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);">. See the<span>&nbsp;</span></span></span></span><span style="font-size: 0.875rem; line-height: 23.8px;"><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><a href="https://docs.docker.com/engine/userguide/eng-image/multistage-build/" style="color: rgb(35, 82, 124); text-decoration: none; font-size: 0.875rem; background-color: rgb(255, 255, 255);">multi-stage build docs</a></span></span><span style="font-size: 0.875rem; line-height: 23.8px;"><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><span>&nbsp;</span>for details.</span></span></span></font></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">build</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">context</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">.</span>
  <span class="na" style="color:rgb(101, 139, 0);">target</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">prod</span></code></pre></span></div><h3 id="cap_add-cap_drop" style="color: rgb(51, 68, 76);">cap_add, cap_drop</h3><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>添加或删除容器功能。</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span>&nbsp;</span>See<span>&nbsp;</span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">man 7 capabilities</code></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span>&nbsp;</span>for a full list.</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">cap_add</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">ALL</span>

<span class="na" style="color:rgb(101, 139, 0);">cap_drop</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">NET_ADMIN</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">SYS_ADMIN</span></code></pre>这些选项在</span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span>&nbsp;</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color: rgb(0, 144, 200); text-decoration: none;">deploying a stack in swarm mode</a>&nbsp;的compose文件（版本3）中被忽略</span></div><div></div><h3 id="cgroup_parent" style="color: rgb(51, 68, 76);">cgroup_parent</h3><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>为容器指定可选的父cgroup。</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">cgroup_parent</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">m-executor-abcd</span></code></pre></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>这些选项在</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span>&nbsp;</span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color: rgb(35, 82, 124); text-decoration: none;">deploying a stack in swarm mode</a></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span>&nbsp;</span></span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>&nbsp;的compose文件（版本3）中被忽略</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></span></div><div></div><h3 id="command" style="color: rgb(51, 68, 76);"><span style="line-height: 1.7;">configs</span><br></h3><p style="color:rgb(51, 68, 76);font-size:0.875rem">Grant access to configs on a per-service basis using the per-service<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">configs</code><span>&nbsp;</span>configuration. Two different syntax variants are supported.</p><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><blockquote style="font-size: 1.094rem;"><p style="font-size: 0.875rem;"><strong>Note</strong>: The config must already exist or be<span>&nbsp;</span><a href="https://docs.docker.com/compose/compose-file/#configs-configuration-reference" style="color:rgb(0, 144, 200);text-decoration:none;">defined in the top-level<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">configs</code><span>&nbsp;</span>configuration</a><span>&nbsp;</span>of this stack file, or stack deployment fails.</p></blockquote><p>For more information on configs, see<span>&nbsp;</span><a href="https://docs.docker.com/engine/swarm/configs/" style="color:rgb(0, 144, 200);text-decoration:none;">configs</a>.<br></p><h4 id="short-syntax" style="font-size: 1rem;">SHORT SYNTAX</h4></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span>&nbsp;</span>short syntax variant 仅指定配置名称，<font><font>这将授予容器对配置的访问权限并将其挂载到</font></font><font><font>容器内部目录<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">/&lt;config_name&gt;</code><font><font><span>&nbsp;</span></font></font>。</font><font>源名称和目标挂载点都设置为配置名称。</font></font></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>以下示例使用短语法授予</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">redis</code><font><font>对</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">my_config</code><font><font>和</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">my_other_config</code><font><font>configs<span>&nbsp;</span></font><font>的</font><font>服务访问权限</font><font>。</font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">my_config</code><span><span>&nbsp;的值被设置为</span></span><span><span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);">./my_config.txt的文件内容，<code class="highlighter-rouge" style="background-color: rgba(12, 81, 118, 0.0980392);">my_other_config</code></span></span></span><span><span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><span>&nbsp;被定义为外部资源，意味着它已经在docker中通过</span></span></span></span></span><span><span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);">docker config create命令，或者被另一个</span></span></span></span></span></span><span><span><span>&nbsp;</span>stack deployment</span></span><span><span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><span>定义过，<font><font>如果外部配置不存在，则<span>stack deployment</span>失败并显示</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">config not found</code><font><font>错误。</font></font></span></span></span></span></span></font><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">config</code><font><font>定义仅在compose文件格式的3.3及更高版本中受支持。</font></font><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3.3"</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">redis</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">redis:latest</span>
    <span class="na" style="color:rgb(101, 139, 0);">deploy</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">replicas</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">1</span>
    <span class="na" style="color:rgb(101, 139, 0);">configs</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">my_config</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">my_other_config</span>
<span class="na" style="color:rgb(101, 139, 0);">configs</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">my_config</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">file</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">./my_config.txt</span>
  <span class="na" style="color:rgb(101, 139, 0);">my_other_config</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">external</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span></code></pre></span></div><h4 id="long-syntax" style="color: rgb(51, 68, 76);">LONG SYNTAX</h4><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>long syntax在</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span><span>&nbsp;</span>service’s task containers中</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span>，关于配置是如何被创建的 提供了</span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><span><span>更细粒度。</span></span></span><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></span></div><div><ul style="color: rgb(51, 68, 76); font-size: 0.875rem;"><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">source</code><font><font>：Docker中存在的配置名称。</font></font></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">target</code><font><font>：<span><span>&nbsp;</span>service’s task containers</span>中文件挂载的路径和名称。</font></font><font><font>如果未指定</font><font>，</font><font>则</font><font>默认为<span style="color:rgb(12, 81, 118);font-family:monospace;font-size:0.788rem;background-color:rgba(12, 81, 118, 0.0980392);">/&lt;source&gt;</span></font><font>。</font></font></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">uid</code><font><font>和</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">gid</code><font><font>：在<span>service’s task containers</span>中，拥有已挂载配置文件的数字UID或GID。</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">在<span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);">Linux</span></code><font><font>如果未指定，则</font><font>默认为<span style="color:rgb(12, 81, 118);font-family:monospace;font-size:0.788rem;background-color:rgba(12, 81, 118, 0.0980392);">0</span></font><font>。</font><font>Windows不支持。</font></font></li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">mode</code><font><font>：以八进制表示的在<span>&nbsp;</span><span>service’s task containers</span>中挂载的文件的权限。</font><font>例如，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">0444</code><font><font><span>&nbsp;</span>代表世界可读。</font><font>默认是</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">0444</code><font><font>。</font><font>配置无法写入，因为它们安装在临时文件系统中，因此如果设置了可写位，则会将其忽略。</font><font>可以设置可执行位。</font><font>如果您不熟悉UNIX文件权限模式，则可能会发现此<span>&nbsp;<a href="http://permissions-calculator.org/" target="_blank" class="_" style="color: rgb(0, 144, 200); text-decoration: none;">permissions calculator</a></span></font></font><font><font><span>&nbsp;</span>很有用。</font></font></li></ul><p><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>以下示例</font><font>在容器中设置</font></font><code class="highlighter-rouge" style="color: rgb(12, 81, 118) !important; font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">my_config</code><code class="highlighter-rouge" style="font-size: 0.875rem; line-height: 23.8px;"><font color="#33444c" face="Helvetica, Hiragino Sans GB, 微软雅黑, Microsoft YaHei UI, SimSun, SimHei, arial, sans-serif">到</font></code><code class="highlighter-rouge" style="color: rgb(12, 81, 118) !important; font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">redis_config</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>，将模式设置为</font></font><code class="highlighter-rouge" style="color: rgb(12, 81, 118) !important; font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">0440</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>（group-readable）并将用户和组设置为</font></font><code class="highlighter-rouge" style="color: rgb(12, 81, 118) !important; font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">103</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>。</font><font>该</font></font><code class="highlighter-rouge" style="color: rgb(12, 81, 118) !important; font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">redis</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>服务无权访问该</font></font><code class="highlighter-rouge" style="color: rgb(12, 81, 118) !important; font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">my_other_config</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><span>&nbsp;</span>配置。</font></font><br></p><div style="color: gray; font-size: 0.875rem;"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3.3"</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">redis</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">redis:latest</span>
    <span class="na" style="color:rgb(101, 139, 0);">deploy</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">replicas</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">1</span>
    <span class="na" style="color:rgb(101, 139, 0);">configs</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na" style="color:rgb(101, 139, 0);">source</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">my_config</span>
        <span class="na" style="color:rgb(101, 139, 0);">target</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">/redis_config</span>
        <span class="na" style="color:rgb(101, 139, 0);">uid</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">103'</span>
        <span class="na" style="color:rgb(101, 139, 0);">gid</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">103'</span>
        <span class="na" style="color:rgb(101, 139, 0);">mode</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">0440</span>
<span class="na" style="color:rgb(101, 139, 0);">configs</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">my_config</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">file</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">./my_config.txt</span>
  <span class="na" style="color:rgb(101, 139, 0);">my_other_config</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">external</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span></code><br><div style="color:gray;"><font style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);">您可以授予对多个配置的服务访问权限，您可以混合使用长短语法。</font><font style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);">定义配置并不意味着授予服务访问权限。</font><br></div></pre></div><h3 id="container_name" style="color: rgb(51, 68, 76);"><font><font>CONTAINER_NAME</font></font></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>指定自定义容器名称，而不是生成的默认名称。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">container_name</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">my-web-container</span>
</code></pre></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>由于Docker容器名称必须是唯一的，因此如果指定了自定义名称，则无法将服务扩展到1个容器之外。</font><font>试图这样做会导致错误。</font></font></p><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：</font><font><span>&nbsp;</span>使用（版本3）Compose文件</font></font><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;"><font><font>在群集模式下部署堆栈</font></font></a><font><font>时，</font><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;"><font>将</font></a><font>忽略此选项<span>&nbsp;</span></font><font>。</font></font></p></blockquote></div><h3 id="credential_spec" style="color: rgb(51, 68, 76);">credential_spec</h3><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><strong><font><font>注意</font></font></strong><font><font>：此选项已在v3.3中添加。</font></font><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>配置托管服务帐户的凭据规范。</font><font>此选项仅用于使用Windows容器的服务。<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);">credential_spec的格式必须是<code class="highlighter-rouge" style="background-color: rgba(12, 81, 118, 0.0980392);">file://&lt;filename&gt;</code></span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);"><span>&nbsp;</span>or<span>&nbsp;</span></span></span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><code class="highlighter-rouge" style="background-color: rgba(12, 81, 118, 0.0980392);">registry://&lt;value-name&gt;</code></span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);">.</span></span></font><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>当使用<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);">file时，引用文件必须存在于Docker的数据目录</span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span>CredentialSpecs的子目录，在windows中默认为</span></span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span><span>C:\ProgramData\Docker\；以下示例，从名为</span></span></span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span><span><span>C:\ProgramData\Docker\CredentialSpecs\my-credential-spec.json</span></span></span></span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span><span>的文件中加载</span></span></span><span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgb(245, 248, 250);"><span><span><span style="color: rgb(51, 68, 76); font-size: 0.875rem; background-color: rgb(255, 255, 255);">credential spec：</span></span></span></span></font></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">credential_spec</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">file</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">my-credential-spec.json&nbsp; &nbsp;&nbsp;</span></code></pre><p><font><font>使用时</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">registry:</code><font><font>，将从守护程序主机上的Windows注册表中读取凭据规范。</font><font>具有给定名称的注册表值必须位于：</font></font></p><div class="highlight"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Virtualization\Containers\CredentialSpecs
</code></pre></div><p><font><font>以下示例从<span>注册表中名为</span></font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">my-credential-spec</code><font><font><span>&nbsp;</span>中</font><font>加载凭据规范</font><font>：</font></font></p><div class="highlight"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">credential_spec</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">registry</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">my-credential-spec</span></code></pre></div><br><h3 id="devices" style="font-size: 1.375rem;">devices</h3><p><font><font>设备映射列表。</font><font>使用与</font></font><font><font>docker client create选项<span style="color: rgb(12, 81, 118); font-size: 0.788rem; background-color: rgba(12, 81, 118, 0.0980392);">--device</span></font><font>相同的格式</font><font>。</font></font></p><div class="highlight"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">devices</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">/dev/ttyUSB0:/dev/ttyUSB0"</span></code></pre></div><br><h3 id="init" style="font-size: 1.375rem;">init</h3><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-37" style="color: rgb(0, 144, 200); text-decoration: none;"><font><font>在3.7版文件格式中添加</font></font></a><font><font>。</font></font><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>在容器内运行init，转发信号并重新获得进程。</font><font>设置布尔值以使用默认值</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">init</code><font><font>，或指定自定义的路径。</font></font><br></span></div><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">3.7'</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">web</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">alpine:latest</span>
    <span class="na" style="color:rgb(101, 139, 0);">init</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
</code></pre></div><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">2.2'</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">web</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">alpine:latest</span>
    <span class="na" style="color:rgb(101, 139, 0);">init</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">/usr/libexec/docker-init</span></code></pre></div><div class="language-yaml highlighter-rouge" style="color:rgb(51, 68, 76);font-size:0.875rem"><br><br><h3 id="isolation" style="font-size: 1.375rem;">isolation</h3></div><div style="color:gray;font-size:0.875rem"><font style="color: rgb(51, 68, 76);"><font>指定容器的隔离技术。</font><font>在Linux上，唯一支持的值是</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">default</code><font style="color: rgb(51, 68, 76);"><font>。</font><font>在Windows中，可接受的值是</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">default</code><font style="color: rgb(51, 68, 76);"><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">process</code><font style="color: rgb(51, 68, 76);"><font>和<span>&nbsp;</span></font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">hyperv</code><font style="color: rgb(51, 68, 76);"><font>。</font><font><span>&nbsp;</span>有关详细信息，</font><font>请参阅<span>&nbsp;</span></font></font><a href="https://docs.docker.com/engine/reference/commandline/run/#specify-isolation-technology-for-container---isolation" style="color: rgb(0, 144, 200); text-decoration: none;"><font><font>Docker Engine文档</font></font></a><font style="color: rgb(51, 68, 76);"><font>。</font></font><br></div><div style="color:gray;font-size:0.875rem"></div><h3 id="secrets" style="color: rgb(51, 68, 76); font-size: 1.375rem;"><span>domainname，hostname，ipc，mac_address，privileged，read_only，shm_size，stdin_open，tty，user，working_dir</span></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>每个都是单个值，功能类似于<span>&nbsp;他们在</span></font></font><font style="color: rgb(0, 144, 200); text-decoration: none;"><font><a href="https://docs.docker.com/engine/reference/run/" style="text-decoration: none;">docker run</a>命令中</font></font><font><font>对应的功能。</font><font>请注意，这</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">mac_address</code><font><font>是一个遗留选项。</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">user</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">postgresql</span>
<span class="na" style="color:rgb(101, 139, 0);">working_dir</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">/code</span>

<span class="na" style="color:rgb(101, 139, 0);">domainname</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">foo.com</span>
<span class="na" style="color:rgb(101, 139, 0);">hostname</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">foo</span>
<span class="na" style="color:rgb(101, 139, 0);">ipc</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">host</span>
<span class="na" style="color:rgb(101, 139, 0);">mac_address</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">02:42:ac:11:65:43</span>

<span class="na" style="color:rgb(101, 139, 0);">privileged</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>


<span class="na" style="color:rgb(101, 139, 0);">read_only</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
<span class="na" style="color:rgb(101, 139, 0);">shm_size</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">64M</span>
<span class="na" style="color:rgb(101, 139, 0);">stdin_open</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
<span class="na" style="color:rgb(101, 139, 0);">tty</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span></code></pre></div><div style="color:gray;font-size:0.875rem"><br></div><h3 id="secrets" style="color: rgb(51, 68, 76); font-size: 1.375rem;"></h3><h2 id="specifying-durations" style="color: rgb(51, 68, 76); font-size: 1.75rem;">Specifying durations</h2><h3 id="secrets" style="color: rgb(51, 68, 76); font-size: 1.375rem;"></h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font><font>某些配置选项（例如</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">interval</code><font><font>和<code class="highlighter-rouge" style="font-size: 0.788rem; text-decoration: none; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);"><a href="https://docs.docker.com/compose/compose-file/#healthcheck" style="font-size: 0.875rem; color: rgb(0, 144, 200); text-decoration: none;">check</a>的</code></font></font><font><font>子选项<span>&nbsp;</span></font></font><a href="https://docs.docker.com/compose/compose-file/#healthcheck" style="color:rgb(0, 144, 200);text-decoration:none;"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);"><span>timeout</span></code></a><font><font>）接受<span>字符串作为</span>持续时间，格式如下所示：</font></font></p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code>2.5s
10s
1m30s
2h32m
5h34m56s</code></pre></div><h3 id="secrets" style="color: rgb(51, 68, 76); font-size: 1.375rem;"></h3><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>支持的单位是</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">us</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">ms</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">s</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>，</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">m</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>和</font></font><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">h</code><font style="color: rgb(51, 68, 76); font-size: 0.875rem;"><font>。</font></font><h3 id="secrets" style="color: rgb(51, 68, 76); font-size: 1.375rem;"><br></h3><h3 id="secrets" style="color: rgb(51, 68, 76); font-size: 1.375rem;">secrets</h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">Grant access to secrets on a per-service basis using the per-service<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">secrets</code><span>&nbsp;</span>configuration. Two different syntax variants are supported.</p><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong>Note</strong>: The secret must already exist or be<span>&nbsp;</span><a href="https://docs.docker.com/compose/compose-file/#secrets-configuration-reference" style="color:rgb(0, 144, 200);text-decoration:none;">defined in the top-level<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">secrets</code><span>&nbsp;</span>configuration</a><span>&nbsp;</span>of this stack file, or stack deployment fails.</p></blockquote><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">For more information on secrets, see<span>&nbsp;</span><a href="https://docs.docker.com/engine/swarm/secrets/" style="color:rgb(0, 144, 200);text-decoration:none;">secrets</a>.</p><h4 id="short-syntax-2" style="color: rgb(51, 68, 76);">SHORT SYNTAX</h4><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">The short syntax variant only specifies the secret name. This grants the container access to the secret and mounts it at<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">/run/secrets/&lt;secret_name&gt;</code><span>&nbsp;</span>within the container. The source name and destination mountpoint are both set to the secret name.</p><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">The following example uses the short syntax to grant the<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">redis</code><span>&nbsp;</span>service access to the<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">my_secret</code><span>&nbsp;</span>and<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">my_other_secret</code><span>&nbsp;</span>secrets. The value of<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">my_secret</code><span>&nbsp;</span>is set to the contents of the file<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">./my_secret.txt</code>, and<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">my_other_secret</code><span>&nbsp;</span>is defined as an external resource, which means that it has already been defined in Docker, either by running the<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker secret create</code><span>&nbsp;</span>command or by another stack deployment. If the external secret does not exist, the stack deployment fails with a<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">secret not found</code><span>&nbsp;</span>error.</p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3.1"</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">redis</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">redis:latest</span>
    <span class="na" style="color:rgb(101, 139, 0);">deploy</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">replicas</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">1</span>
    <span class="na" style="color:rgb(101, 139, 0);">secrets</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">my_secret</span>
      <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">my_other_secret</span>
<span class="na" style="color:rgb(101, 139, 0);">secrets</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">my_secret</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">file</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">./my_secret.txt</span>
  <span class="na" style="color:rgb(101, 139, 0);">my_other_secret</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">external</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
</code></pre></div><h4 id="long-syntax-2" style="color: rgb(51, 68, 76);">LONG SYNTAX</h4><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">The long syntax provides more granularity in how the secret is created within the service’s task containers.</p><ul style="color: rgb(51, 68, 76); font-size: 0.875rem;"><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">source</code>: The name of the secret as it exists in Docker.</li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">target</code>: The name of the file to be mounted in<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">/run/secrets/</code><span>&nbsp;</span>in the service’s task containers. Defaults to<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">source</code><span>&nbsp;</span>if not specified.</li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">uid</code><span>&nbsp;</span>and<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">gid</code>: The numeric UID or GID that owns the file within<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">/run/secrets/</code><span>&nbsp;</span>in the service’s task containers. Both default to<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">0</code><span>&nbsp;</span>if not specified.</li><li><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">mode</code>: The permissions for the file to be mounted in<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">/run/secrets/</code><span>&nbsp;</span>in the service’s task containers, in octal notation. For instance,<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">0444</code><span>&nbsp;</span>represents world-readable. The default in Docker 1.13.1 is<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">0000</code>, but is be<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">0444</code><span>&nbsp;</span>in newer versions. Secrets cannot be writable because they are mounted in a temporary filesystem, so if you set the writable bit, it is ignored. The executable bit can be set. If you aren’t familiar with UNIX file permission modes, you may find this<span>&nbsp;</span><a href="http://permissions-calculator.org/" target="_blank" class="_" style="color:rgb(0, 144, 200);text-decoration:none;">permissions calculator</a><span>&nbsp;</span>useful.</li></ul><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">The following example sets name of the<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">my_secret</code><span>&nbsp;</span>to<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">redis_secret</code><span>&nbsp;</span>within the container, sets the mode to<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">0440</code><span>&nbsp;</span>(group-readable) and sets the user and group to<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">103</code>. The<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">redis</code><span>&nbsp;</span>service does not have access to the<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">my_other_secret</code><span>&nbsp;</span>secret.</p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">3.1"</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">redis</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">image</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">redis:latest</span>
    <span class="na" style="color:rgb(101, 139, 0);">deploy</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">replicas</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">1</span>
    <span class="na" style="color:rgb(101, 139, 0);">secrets</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na" style="color:rgb(101, 139, 0);">source</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">my_secret</span>
        <span class="na" style="color:rgb(101, 139, 0);">target</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">redis_secret</span>
        <span class="na" style="color:rgb(101, 139, 0);">uid</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">103'</span>
        <span class="na" style="color:rgb(101, 139, 0);">gid</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">103'</span>
        <span class="na" style="color:rgb(101, 139, 0);">mode</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">0440</span>
<span class="na" style="color:rgb(101, 139, 0);">secrets</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">my_secret</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">file</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">./my_secret.txt</span>
  <span class="na" style="color:rgb(101, 139, 0);">my_other_secret</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">external</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
</code></pre></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">You can grant a service access to multiple secrets and you can mix long and short syntax. Defining a secret does not imply granting a service access to it.</p><h3 id="security_opt" style="color: rgb(51, 68, 76); font-size: 1.375rem;">security_opt</h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">Override the default labeling scheme for each container.</p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">security_opt</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">label:user:USER</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">label:role:ROLE</span>
</code></pre></div><blockquote style="font-size: 1.094rem; color: rgb(51, 68, 76);"><p style="font-size: 0.875rem;"><strong>Note</strong>: This option is ignored when<span>&nbsp;</span><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;">deploying a stack in swarm mode</a><span>&nbsp;</span>with a (version 3) Compose file.</p></blockquote><h3 id="stop_grace_period" style="color: rgb(51, 68, 76); font-size: 1.375rem;">stop_grace_period</h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">Specify how long to wait when attempting to stop a container if it doesn’t handle SIGTERM (or whatever stop signal has been specified with<span>&nbsp;</span><a href="https://docs.docker.com/compose/compose-file/#stopsignal" style="color:rgb(0, 144, 200);text-decoration:none;"><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">stop_signal</code></a>), before sending SIGKILL. Specified as a<span>&nbsp;</span><a href="https://docs.docker.com/compose/compose-file/#specifying-durations" style="color:rgb(0, 144, 200);text-decoration:none;">duration</a>.</p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code>stop_grace_period: 1s
stop_grace_period: 1m30s
</code></pre></div><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">By default,<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">stop</code><span>&nbsp;</span>waits 10 seconds for the container to exit before sending SIGKILL.</p><h3 id="stop_signal" style="color: rgb(51, 68, 76); font-size: 1.375rem;">stop_signal</h3><p style="color: rgb(51, 68, 76); font-size: 0.875rem;">Sets an alternative signal to stop the container. By default<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">stop</code><span>&nbsp;</span>uses SIGTERM. Setting an alternative signal using<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">stop_signal</code><span>&nbsp;</span>causes<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">stop</code><span>&nbsp;</span>to send that signal instead.</p><div class="highlight" style="color:rgb(51, 68, 76);font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">stop_signal</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">SIGUSR1</span></code></pre></div><div class="language-yaml highlighter-rouge" style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br><br><h3 id="sysctls" style="font-size: 1.375rem;">sysctls</h3><p>Kernel parameters to set in the container. You can use either an array or a dictionary.</p><div class="highlight"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">sysctls</span><span class="pi">:</span>
  <span class="s" style="color:rgb(205, 85, 85);">net.core.somaxconn</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">1024</span>
  <span class="s" style="color:rgb(205, 85, 85);">net.ipv4.tcp_syncookies</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">0</span>
</code></pre></div><div class="highlight"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">sysctls</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">net.core.somaxconn=1024</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">net.ipv4.tcp_syncookies=0</span>
</code></pre></div><blockquote style="font-size: 1.094rem;"><p style="font-size: 0.875rem;"><strong>Note</strong>: This option is ignored when<span>&nbsp;</span><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;">deploying a stack in swarm mode</a><span>&nbsp;</span>with a (version 3) Compose file.</p></blockquote><h3 id="tmpfs" style="font-size: 1.375rem;">tmpfs</h3><blockquote style="font-size: 1.094rem;"><p style="font-size: 0.875rem;"><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-2" style="color:rgb(0, 144, 200);text-decoration:none;">Version 2 file format</a><span>&nbsp;</span>and up.</p></blockquote><p>Mount a temporary file system inside the container. Can be a single value or a list.</p><div class="highlight"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">tmpfs</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">/run</span>
</code></pre></div><div class="highlight"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">tmpfs</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">/run</span>
  <span class="pi">-</span> <span class="s" style="color:rgb(205, 85, 85);">/tmp</span>
</code></pre></div><blockquote style="font-size: 1.094rem;"><p style="font-size: 0.875rem;"><strong>Note</strong>: This option is ignored when<span>&nbsp;</span><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;">deploying a stack in swarm mode</a><span>&nbsp;</span>with a (version 3-3.5) Compose file.</p></blockquote><blockquote style="font-size: 1.094rem;"><p style="font-size: 0.875rem;"><a href="https://docs.docker.com/compose/compose-file/compose-versioning/#version-3" style="color:rgb(0, 144, 200);text-decoration:none;">Version 3.6 file format</a><span>&nbsp;</span>and up.</p></blockquote><p>Mount a temporary file system inside the container. Size parameter specifies the size of the tmpfs mount in bytes. Unlimited by default.</p><div class="highlight"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code> <span class="pi">-</span> <span class="na" style="color:rgb(101, 139, 0);">type</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">tmpfs</span>
     <span class="s" style="color:rgb(205, 85, 85);">target</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">/app</span>
     <span class="s" style="color:rgb(205, 85, 85);">tmpfs</span><span class="pi">:</span>
       <span class="na" style="color:rgb(101, 139, 0);">size</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">1000</span>
</code></pre></div><h3 id="ulimits" style="font-size: 1.375rem;">ulimits</h3><p>Override the default ulimits for a container. You can either specify a single limit as an integer or soft/hard limits as a mapping.</p><div class="highlight"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">ulimits</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">nproc</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">65535</span>
  <span class="na" style="color:rgb(101, 139, 0);">nofile</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">soft</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">20000</span>
    <span class="na" style="color:rgb(101, 139, 0);">hard</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">40000</span>
</code></pre></div><h3 id="userns_mode" style="font-size: 1.375rem;">userns_mode</h3><div class="highlight"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">userns_mode</span><span class="pi">:</span> <span class="s2" style="color:rgb(205, 85, 85);">"</span><span class="s" style="color:rgb(205, 85, 85);">host"</span>
</code></pre></div><p>Disables the user namespace for this service, if Docker daemon is configured with user namespaces. See<span>&nbsp;</span><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#disable-user-namespace-for-a-container" style="color:rgb(0, 144, 200);text-decoration:none;">dockerd</a><span>&nbsp;</span>for more information.</p><blockquote style="font-size: 1.094rem;"><p style="font-size: 0.875rem;"><strong>Note</strong>: This option is ignored when<span>&nbsp;</span><a href="https://docs.docker.com/engine/reference/commandline/stack_deploy/" style="color:rgb(0, 144, 200);text-decoration:none;">deploying a stack in swarm mode</a><span>&nbsp;</span>with a (version 3) Compose file.</p><br><div style="color:gray;"></div><h2 id="network-configuration-reference" style="font-size: 1.75rem;">Network configuration reference</h2><p style="font-size: 0.875rem;">The top-level<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">networks</code><span>&nbsp;</span>key lets you specify networks to be created.</p><ul style="font-size: 0.875rem;"><li><p>For a full explanation of Compose’s use of Docker networking features and all network driver options, see the<span>&nbsp;</span><a href="https://docs.docker.com/compose/networking/" style="color:rgb(0, 144, 200);text-decoration:none;">Networking guide</a>.</p></li><li><p>For<span>&nbsp;</span><a href="https://github.com/docker/labs/blob/master/README.md" style="color:rgb(0, 144, 200);text-decoration:none;">Docker Labs</a><span>&nbsp;</span>tutorials on networking, start with<span>&nbsp;</span><a href="https://github.com/docker/labs/blob/master/networking/README.md" style="color:rgb(0, 144, 200);text-decoration:none;">Designing Scalable, Portable Docker Container Networks</a></p></li></ul><h3 id="driver-1" style="font-size: 1.375rem;">driver</h3><p style="font-size: 0.875rem;">Specify which driver should be used for this network.</p><p style="font-size: 0.875rem;">The default driver depends on how the Docker Engine you’re using is configured, but in most instances it is<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">bridge</code><span>&nbsp;</span>on a single host and<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">overlay</code><span>&nbsp;</span>on a Swarm.</p><p style="font-size: 0.875rem;">The Docker Engine returns an error if the driver is not available.</p><div class="highlight" style="font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">driver</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">overlay</span>
</code></pre></div><h4 id="bridge" style="font-size: 1rem;">BRIDGE</h4><p style="font-size: 0.875rem;">Docker defaults to using a<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">bridge</code><span>&nbsp;</span>network on a single host. For examples of how to work with bridge networks, see the Docker Labs tutorial on<span>&nbsp;</span><a href="https://github.com/docker/labs/blob/master/networking/A2-bridge-networking.md" style="color:rgb(0, 144, 200);text-decoration:none;">Bridge networking</a>.</p><h4 id="overlay" style="font-size: 1rem;">OVERLAY</h4><p style="font-size: 0.875rem;">The<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">overlay</code><span>&nbsp;</span>driver creates a named network across multiple nodes in a<span>&nbsp;</span><a href="https://docs.docker.com/engine/swarm/" style="color:rgb(0, 144, 200);text-decoration:none;">swarm</a>.</p><ul style="font-size: 0.875rem;"><li><p>For a working example of how to build and use an<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">overlay</code><span>&nbsp;</span>network with a service in swarm mode, see the Docker Labs tutorial on<span>&nbsp;</span><a href="https://github.com/docker/labs/blob/master/networking/A3-overlay-networking.md" style="color:rgb(0, 144, 200);text-decoration:none;">Overlay networking and service discovery</a>.</p></li><li><p>For an in-depth look at how it works under the hood, see the networking concepts lab on the<span>&nbsp;</span><a href="https://github.com/docker/labs/blob/master/networking/concepts/06-overlay-networks.md" style="color:rgb(0, 144, 200);text-decoration:none;">Overlay Driver Network Architecture</a>.</p></li></ul><h4 id="host-or-none" style="font-size: 1rem;">HOST OR NONE</h4><p style="font-size: 0.875rem;">Use the host’s networking stack, or no networking. Equivalent to<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker run --net=host</code><span>&nbsp;</span>or<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker run --net=none</code>. Only used if you use<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker stack</code><span>&nbsp;</span>commands. If you use the<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">docker-compose</code><span>&nbsp;</span>command, use<span>&nbsp;</span><a href="https://docs.docker.com/compose/compose-file/#network_mode" style="color:rgb(0, 144, 200);text-decoration:none;">network_mode</a><span>&nbsp;</span>instead.</p><p style="font-size: 0.875rem;">The syntax for using built-in networks like<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">host</code><span>&nbsp;</span>and<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">none</code><span>&nbsp;</span>is a little different. Define an external network with the name<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">host</code><span>&nbsp;</span>or<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">none</code><span>&nbsp;</span>(that Docker has already created automatically) and an alias that Compose can use (<code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">hostnet</code><span>&nbsp;</span>or<span>&nbsp;</span><code class="highlighter-rouge" style="font-size: 0.788rem; color: rgb(12, 81, 118) !important; background-color: rgba(12, 81, 118, 0.0980392);">nonet</code><span>&nbsp;</span>in these examples), then grant the service access to that network, using the alias.</p><div class="highlight" style="font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">version</span><span class="pi">:</span> <span class="s1" style="color:rgb(205, 85, 85);">'</span><span class="s" style="color:rgb(205, 85, 85);">3.7'</span>
<span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">web</span><span class="pi">:</span>
    <span class="c1" style="color:rgb(34, 139, 34);"># ...</span>
    <span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">hostnet</span><span class="pi">:</span> <span class="pi">{}</span>

<span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">hostnet</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">external</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
    <span class="na" style="color:rgb(101, 139, 0);">name</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">host</span>
</code></pre></div><div class="highlight" style="font-size:0.875rem"><pre class="highlight" style="font-size: 0.813rem; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245);"><code><span class="na" style="color:rgb(101, 139, 0);">services</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">web</span><span class="pi">:</span>
    <span class="c1" style="color:rgb(34, 139, 34);"># ...</span>
    <span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
      <span class="na" style="color:rgb(101, 139, 0);">nonet</span><span class="pi">:</span> <span class="pi">{}</span>

<span class="na" style="color:rgb(101, 139, 0);">networks</span><span class="pi">:</span>
  <span class="na" style="color:rgb(101, 139, 0);">nonet</span><span class="pi">:</span>
    <span class="na" style="color:rgb(101, 139, 0);">external</span><span class="pi">:</span> <span class="no" style="color:rgb(0, 104, 139);">true</span>
    <span class="na" style="color:rgb(101, 139, 0);">name</span><span class="pi">:</span> <span class="s" style="color:rgb(205, 85, 85);">none</span></code></pre></div><div class="language-yaml highlighter-rouge" style="font-size: 0.875rem;"><br></div><div style="font-size:0.875rem;color:gray"><br></div></blockquote></div><div style="color:gray;font-size:0.875rem"><br></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></span></div><div><span style="color: rgb(51, 68, 76); font-size: 0.875rem;"><br></span></div></body></html>